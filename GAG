local a;local b=game:GetService("Players")local c=b.LocalPlayer;local d=c.Character.HumanoidRootPart;local e=game:GetService("TweenService")local function f(g)if not g then return false end;return string.find(g,c.Name)~=nil end;local a;for h,i in pairs(workspace.Farm:GetChildren())do if i.Name=="Farm"and i:FindFirstChild("Important")and i.Important:FindFirstChild("Data")then local j=i.Important.Data:FindFirstChild("Owner")if j and(j.Value==game.Players.LocalPlayer or j.Value==game.Players.LocalPlayer.Name or j.Value.Name==game.Players.LocalPlayer.Name)then a=i;break end end end;local function k()local l;pcall(function()local m=a.Important.Plant_Locations:GetChildren()[1]l=m end)return l end;local function n()local l;pcall(function()local m=a.Important.Plant_Locations:GetChildren()[2]l=m end)return l end;local function o(p,q)local r={}local s=workspace:FindFirstChild("PetsPhysical")if s then for h,t in ipairs(s:GetChildren())do if t:IsA("BasePart")then local u=(t.Position-p.Position).Magnitude;if u<=q then table.insert(r,t)end end end end;return r end;local b=game:GetService("Players")local v=game:GetService("ReplicatedStorage")local c=b.LocalPlayer;local function w()if not c.Character then warn("Character not found!")return end;local d=c.Character:FindFirstChild("HumanoidRootPart")if not d then warn("HumanoidRootPart not found!")return end;local x;for h,y in pairs(c.Character:GetChildren())do if y:IsA("Tool")and string.find(y.Name:lower(),"seed")then x=y;break end end;if not x then for h,y in pairs(c.Backpack:GetChildren())do if y:IsA("Tool")and string.find(y.Name:lower(),"seed")then x=y;break end end end;if not x then warn("No seeds found!")return end;local z=string.gsub(x.Name,"%s*%[X%d+%]",""):gsub(" Seed","")print("Planting:",z)if x.Parent~=c.Character then c.Character.Humanoid:EquipTool(x)wait(0.5)end;local A=d.Position;print("Planting at:",A)local B=pcall(function()v.GameEvents.Plant_RE:FireServer(Vector3.new(A.X,A.Y,A.Z),z)end)if B then print("Successfully planted!")else warn("Planting failed!")end end;local function C(D)if not a then return nil end;local E=a.Important:FindFirstChild("Plant_Locations")if not E then return nil end;return E:GetChildren()[D]end;local function F()if not a then warn("No farm found!")return end;local x;for h,y in pairs(c.Character:GetChildren())do if y:IsA("Tool")and string.find(y.Name:lower(),"seed")then x=y;break end end;if not x then for h,y in pairs(c.Backpack:GetChildren())do if y:IsA("Tool")and string.find(y.Name:lower(),"seed")then x=y;break end end end;if not x then warn("No seeds found!")return end;local z=string.gsub(x.Name,"%s*%[X%d+%]",""):gsub(" Seed","")if x.Parent~=c.Character then c.Character.Humanoid:EquipTool(x)wait(0.5)end;local A=d.Position;local B=pcall(function()v.GameEvents.Plant_RE:FireServer(Vector3.new(A.X,A.Y,A.Z),z)end)if B then print("Planted:",z)else warn("Planting failed!")end end;local G=loadstring(game:HttpGet("https://raw.githubusercontent.com/DEVIL-Script/DEVIL-Ui/refs/heads/main/EmojiCode",true))()local H=loadstring(game:HttpGet("https://raw.githubusercontent.com/DEVIL-Script/DEVIL-Ui/main/DEVIL-Ui-Lib",true))()local I=H:CreateWindow("Farm Helper",game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)local J=I:CreateTab(G.settings.." Main")local K;J:CreateTextBox("Discord Webhook","URL",function(L)K=L end)J:CreateToggle(G.seed.." Auto Equip Pet",function(M)local N=game:GetService("Players").LocalPlayer;local O=N.Character or N.CharacterAdded:Wait()local P=N:WaitForChild("Backpack")function useTools(Q)Q=Q:lower()local R={}for h,S in pairs(P:GetChildren())do if S:IsA("Tool")and S.Name:lower():find(Q)then table.insert(R,S)end end;for T,y in ipairs(R)do y.Parent=O;repeat task.wait()until y.Parent==O;y:Activate()if T<#R then task.wait(0.1)end end end;useTools(K)end)getgenv().BringPets=false;J:CreateToggle(G.paw.." Bring Pets",function(U)getgenv().BringPets=U;if U then spawn(function()while BringPets and task.wait()do pcall(function()local V=k()if V then local W=o(V,75)if#W>0 then for h,t in ipairs(W)do local X=e:Create(t,TweenInfo.new(0,Enum.EasingStyle.Sine),{CFrame=d.CFrame*CFrame.new(0,0,0)})X:Play()end end end end)end end)end end)
