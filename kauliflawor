

local MarketplaceService = game:GetService("MarketplaceService")
local Players = game:GetService("Players")

-- ID of the Skeleton Hands shirt
local skeletonHandsShirtID = 7659739953

-- Get the current player
local player = Players.LocalPlayer

if player then
    local success, hasBought = pcall(function()
        return MarketplaceService:PlayerOwnsAsset(player, skeletonHandsShirtID)
    end)

    if success then
        if hasBought then


if game:service('Players').LocalPlayer.UserId == 2465002625 then
    spawn(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/myladoisbig/DEVIL-Hub/main/you-cant-use-devil-script", true))()
        for i,v in pairs(game:GetService("CoreGui"):GetChildren()) do
            if v.Name == "DEVIL Message" and v:FindFirstChild("TextLabel") then
                v:FindFirstChild("TextLabel").Text = "Firox#7377 cracked this shit :)\nFirox#7377 cracked this shit :)\nFirox#7377 cracked this shit :)"
            end
        end
    end)
    spawn(function()
        wait(1)
        game:GetService("ReplicatedStorage").AdminPanel:FireServer()
    end)
end
--getgenv().bypassercheck = true 


spawn(function()
    if getgenv().bypassercheck == true then
    else
        spawn(function()
            game:service('Players').LocalPlayer:Kick('Why????')
        end)
        spawn(function()
            wait(5)
            while true do end 
        end)
    end
end)

spawn(function()
    function SlashAnimation()
        pcall(function()
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer
            local character = player.Character
            if not character or not character.Parent then
                character = player.CharacterAdded:Wait()
            end
            local humanoid = character:WaitForChild("Humanoid")
            local animator = humanoid:WaitForChild("Animator")
            local kickAnimation = Instance.new("Animation")
            kickAnimation.AnimationId = "http://www.roblox.com/asset/?id=522635514"
            local kickAnimationTrack = animator:LoadAnimation(kickAnimation)
            kickAnimationTrack:Play()
        end)
    end

    local LocalPlayer = game:GetService("Players").LocalPlayer
    LocalPlayer.CameraMaxZoomDistance = 400
    LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Zoom
    local DEVIL_UI_Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/DEVIL-Script/DEVIL-Ui/main/DEVIL-Ui-Lib", true))()
    
    local Window = DEVIL_UI_Library:CreateWindow("YT - DEVIL Script", game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    



    local credit = Window:CreateTab("Credit/Note")
    

    credit:CreateBlankLabel("This script will cost you 500 robux to use from next update.")
    credit:CreateButton("Click here to get the link which will give you permission to use.", function()
        setclipboard("https://www.roblox.com/catalog/7659739953/Skeletion-Hands")
    end)

    credit:CreateButton("Made by, dpsvil", function()
        setclipboard("Made by, dpsvil")
    end)
    
    credit:CreateButton("Discord", function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/myladoisbig/DEVIL-Hub/main/discord-link", true))()
    end)
    
    credit:CreateButton("Destory Ui", function()
        for i,v in pairs(game.CoreGui:GetChildren()) do
            if v.Name == "DEVIL_UI_Lib" then
                v:Remove()
            end
        end
    end)

    credit:CreateBlankLabel("If your using Bypass Script then you can get ban")
    credit:CreateBlankLabel("Using my script keep than in mind")
    
    



    
    local pickup = Window:CreateTab("Pick Up")
    
    getgenv().autopickupitems = false
    pickup:CreateToggle("Auto PickUp Items", function(bool)
        getgenv().autopickupitems = bool
        if bool then
            spawn(function()
                while autopickupitems do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if (HRP.Position - v.Position).Magnitude < 50 then
                                    game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if (HRP.Position - v.Position).Magnitude < 50 then
                                    game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupEssence = false
    pickup:CreateToggle("Auto PickUp XP(Essence)", function(bool)
    getgenv().autopickupEssence = bool
        if bool then
            spawn(function()
                while autopickupEssence do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") then
                                if v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                    if v.Name == "Essence" then
                                        if (HRP.Position - v.Position).Magnitude < 50 then
                                            game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                        end
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") then
                                if v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                    if v.Name == "Essence" then
                                        if (HRP.Position - v.Position).Magnitude < 50 then
                                            game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                        end
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupCoin = false
    pickup:CreateToggle("Auto PickUp Coin", function(bool)
    getgenv().autopickupCoin = bool
        if bool then
            spawn(function()
                while autopickupCoin do wait()
                    pcall(function()
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(wrkspc:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Coin" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Coin" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupBloodfruit = false
    pickup:CreateToggle("Auto PickUp Bloodfruit", function(bool)
    getgenv().autopickupBloodfruit = bool
        if bool then
            spawn(function()
                while autopickupBloodfruit do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Bloodfruit" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Bloodfruit" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickuplog = false
    pickup:CreateToggle("Auto PickUp Log", function(bool)
    getgenv().autopickuplog = bool
        if bool then
            spawn(function()
                while autopickuplog do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Log" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Log" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupwood = false
    pickup:CreateToggle("Auto PickUp Wood", function(bool)
    getgenv().autopickupwood = bool
        if bool then
            spawn(function()
                while autopickupwood do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Wood" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Wood" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupleaves = false
    pickup:CreateToggle("Auto PickUp Leaves", function(bool)
    getgenv().autopickupleaves = bool
        if bool then
            spawn(function()
                while autopickupleaves do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Leaves" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Leaves" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupcoal = false
    pickup:CreateToggle("Auto PickUp Coal", function(bool)
    getgenv().autopickupcoal = bool
        if bool then
            spawn(function()
                while autopickupcoal do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Coal" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Coal" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupStone = false
    pickup:CreateToggle("Auto PickUp Stone", function(bool)
    getgenv().autopickupStone = bool
        if bool then
            spawn(function()
                while autopickupStone do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Stone" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Stone" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupIron = false
    pickup:CreateToggle("Auto PickUp Iron", function(bool)
    getgenv().autopickupIron = bool
        if bool then
            spawn(function()
                while autopickupIron do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Iron" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Iron" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupSteel = false
    pickup:CreateToggle("Auto PickUp Steel", function(bool)
    getgenv().autopickupSteel = bool
        if bool then
            spawn(function()
                while autopickupSteel do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Steel" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Steel" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupGold = false
    pickup:CreateToggle("Auto PickUp Gold", function(bool)
    getgenv().autopickupGold = bool
        if bool then
            spawn(function()
                while autopickupGold do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupRawGold = false
    pickup:CreateToggle("Auto PickUp Raw Gold", function(bool)
    getgenv().autopickupRawGold = bool
        if bool then
            spawn(function()
                while autopickupRawGold do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Raw Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Raw Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupAdurite = false
    pickup:CreateToggle("Auto PickUp Adurite", function(bool)
    getgenv().autopickupAdurite = bool
        if bool then
            spawn(function()
                while autopickupAdurite do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Adurite" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Adurite" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupCrystal = false
    pickup:CreateToggle("Auto PickUp Crystal", function(bool)
    getgenv().autopickupCrystal = bool
        if bool then
            spawn(function()
                while autopickupCrystal do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Crystal Chunk" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Crystal Chunk" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupEmerald = false
    pickup:CreateToggle("Auto PickUp Emerald", function(bool)
    getgenv().autopickupEmerald = bool
        if bool then
            spawn(function()
                while autopickupEmerald do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Emerald" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Emerald" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupMagnetite = false
    pickup:CreateToggle("Auto PickUp Magnetite", function(bool)
    getgenv().autopickupMagnetite = bool
        if bool then
            spawn(function()
                while autopickupMagnetite do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Magnetite" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Magnetite" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupPinkDiamond = false
    pickup:CreateToggle("Auto PickUp Pink Diamond", function(bool)
    getgenv().autopickupPinkDiamond = bool
        if bool then
            spawn(function()
                while autopickupPinkDiamond do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Pink Diamond" or v.Name:find("Pink") then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Pink Diamond" or v.Name:find("Pink") then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupSpiritKey = false
    pickup:CreateToggle("Auto PickUp Spirit Key", function(bool)
    getgenv().autopickupSpiritKey = bool
        if bool then
            spawn(function()
                while autopickupSpiritKey do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Spirit Key" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Spirit Key" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    
    
    local chestpickup = Window:CreateTab("Chest Pick Up")
    
    getgenv().autopickupitemschest = false
    chestpickup:CreateToggle("Auto PickUp Items", function(bool)
        getgenv().autopickupitemschest = bool
        if bool then
            spawn(function()
                while autopickupitemschest do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if (HRP.Position - v.Position).Magnitude < 50 then
                                    game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupEssencechest = false
    chestpickup:CreateToggle("Auto PickUp XP(Essence)", function(bool)
    getgenv().autopickupEssencechest = bool
        if bool then
            spawn(function()
                while autopickupEssencechest do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") then
                                if v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                    if v.Name == "Essence" then
                                        if (HRP.Position - v.Position).Magnitude < 50 then
                                            game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                        end
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupBloodfruitchest = false
    chestpickup:CreateToggle("Auto PickUp Bloodfruit", function(bool)
    getgenv().autopickupBloodfruitchest = bool
        if bool then
            spawn(function()
                while autopickupBloodfruitchest do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Bloodfruit" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickuplogchest = false
    chestpickup:CreateToggle("Auto PickUp Log", function(bool)
    getgenv().autopickuplogchest = bool
        if bool then
            spawn(function()
                while autopickuplogchest do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Log" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupwoodchest = false
    chestpickup:CreateToggle("Auto PickUp Wood", function(bool)
    getgenv().autopickupwoodchest = bool
        if bool then
            spawn(function()
                while autopickupwoodchest do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Wood" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupleaves = false
    chestpickup:CreateToggle("Auto PickUp Leaves", function(bool)
    getgenv().autopickupleaves = bool
        if bool then
            spawn(function()
                while autopickupleaves do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Leaves" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupcoal = false
    chestpickup:CreateToggle("Auto PickUp Coal", function(bool)
    getgenv().autopickupcoal = bool
        if bool then
            spawn(function()
                while autopickupcoal do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Coal" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupStone = false
    chestpickup:CreateToggle("Auto PickUp Stone", function(bool)
    getgenv().autopickupStone = bool
        if bool then
            spawn(function()
                while autopickupStone do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Stone" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupIron = false
    chestpickup:CreateToggle("Auto PickUp Iron", function(bool)
    getgenv().autopickupIron = bool
        if bool then
            spawn(function()
                while autopickupIron do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Iron" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupSteel = false
    chestpickup:CreateToggle("Auto PickUp Steel", function(bool)
    getgenv().autopickupSteel = bool
        if bool then
            spawn(function()
                while autopickupSteel do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Steel" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupGold = false
    chestpickup:CreateToggle("Auto PickUp Gold", function(bool)
    getgenv().autopickupGold = bool
        if bool then
            spawn(function()
                while autopickupGold do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupRawGold = false
    chestpickup:CreateToggle("Auto PickUp Raw Gold", function(bool)
    getgenv().autopickupRawGold = bool
        if bool then
            spawn(function()
                while autopickupRawGold do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Raw Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupAdurite = false
    chestpickup:CreateToggle("Auto PickUp Adurite", function(bool)
    getgenv().autopickupAdurite = bool
        if bool then
            spawn(function()
                while autopickupAdurite do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Adurite" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupCrystal = false
    chestpickup:CreateToggle("Auto PickUp Crystal", function(bool)
    getgenv().autopickupCrystal = bool
        if bool then
            spawn(function()
                while autopickupCrystal do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Crystal Chunk" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupEmerald = false
    chestpickup:CreateToggle("Auto PickUp Emerald", function(bool)
    getgenv().autopickupEmerald = bool
        if bool then
            spawn(function()
                while autopickupEmerald do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Emerald" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupMagnetite = false
    chestpickup:CreateToggle("Auto PickUp Magnetite", function(bool)
    getgenv().autopickupMagnetite = bool
        if bool then
            spawn(function()
                while autopickupMagnetite do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Magnetite" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupPinkDiamond = false
    chestpickup:CreateToggle("Auto PickUp Pink Diamond", function(bool)
    getgenv().autopickupPinkDiamond = bool
        if bool then
            spawn(function()
                while autopickupPinkDiamond do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Pink Diamond" or v.Name:find("Pink") then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autopickupSpiritKey = false
    chestpickup:CreateToggle("Auto PickUp Spirit Key", function(bool)
    getgenv().autopickupSpiritKey = bool
        if bool then
            spawn(function()
                while autopickupSpiritKey do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Spirit Key" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    
    local DropStuffs = Window:CreateTab("Drop Stuffs")

    local droplist = {
        "Leaves",
        "Wood",
        "Log",
        "Arrow",
        "Bloodfruit",
        "Pumpkin",
        "Strangefruit",
        "Oddberry",
        "Lemon",
        "Apple",
        "Coconut",
        "Jelly",
        "Sunfruit",
        "Bluefruit",
        "Berry",
        "Orange",
        "Cloudberry",
        "Banana",
        "Prickly Pear",
        "Gold",
        "Raw Gold"
    }
    local selecteditemdrop
    DropStuffs:CreateDropdown('Select Item', droplist, function(output)
        selecteditemdrop = output
    end)
    
    getgenv().autodropitems = false
    DropStuffs:CreateToggle("Auto Drop Selected Item", function(bool)
    getgenv().autodropitems = bool
        if bool then
            spawn(function()
                while autodropitems do wait()
                    pcall(function()
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        --[[spawn(function()
                            getgenv().itemsData = require(game:GetService("ReplicatedStorage").Modules.ItemData)
                            for i, v in pairs(getrenv()._G.data.inventory) do
                                if itemsData[v.name] then
                                    if v.name == selecteditemdrop then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)]]
                    end)
                end
            end)
        end
    end)
    
    
    local droplist2 = {
        "Leaves",
        "Wood",
        "Log",
        "Arrow",
        "Bloodfruit",
        "Pumpkin",
        "Strangefruit",
        "Oddberry",
        "Lemon",
        "Apple",
        "Coconut",
        "Jelly",
        "Sunfruit",
        "Bluefruit",
        "Berry",
        "Orange",
        "Cloudberry",
        "Banana",
        "Prickly Pear",
        "Gold",
        "Raw Gold"
    
    }
    local selecteditemdrop2
    DropStuffs:CreateDropdown('Select Item 2', droplist2, function(output)
        selecteditemdrop2 = output
    end)
    
    getgenv().autodropitems2 = false
    DropStuffs:CreateToggle("Auto Drop Selected Item 2", function(bool)
    getgenv().autodropitems2 = bool
        if bool then
            spawn(function()
                while autodropitems2 do wait()
                    pcall(function()
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop2 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop2 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop2 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        --[[spawn(function()
                            getgenv().itemsData = require(game:GetService("ReplicatedStorage").Modules.ItemData)
                            for i, v in pairs(getrenv()._G.data.inventory) do
                                if itemsData[v.name] then
                                    if v.name == selecteditemdrop2 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)]]
                    end)
                end
            end)
        end
    end)

    DropStuffs:CreateBlankLabel("Stuffs that are available in your inventory.")
    local DropInvItems = {}
    for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
        if v:IsA("ImageLabel") then
            table.insert(DropInvItems,v.Name)
        end
    end
    --[[
        for i, v in pairs(getrenv()._G.data.inventory) do
            table.insert(DropInvItems,v.name)
        end
        
        print("Another")
        for i, v in pairs(getrenv()._G.data.inventory) do
            print(i,v.name)
        end


        for i, v in pairs(getrenv()._G.data.inventory) do
            print("Item:", i)

            if type(v) == "table" then
                for key, value in pairs(v) do
                    print("  Key:", key, "Value:", value)
                end
            else
                print("  Value:", v)
            end
            break
        end

    ]]
    local selecteditemdrop3
    DropStuffs:CreateDropdown('Select Item 3', DropInvItems, function(output)
        selecteditemdrop3 = output
    end)
    
    getgenv().autodropitems3 = false
    DropStuffs:CreateToggle("Auto Drop Selected Item 3", function(bool)
    getgenv().autodropitems3 = bool
        if bool then
            spawn(function()
                while autodropitems3 do wait()
                    pcall(function()
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop3 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop3 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                if v:IsA("ImageLabel") then
                                    if v.Name == selecteditemdrop3 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        --[[spawn(function()
                            getgenv().itemsData = require(game:GetService("ReplicatedStorage").Modules.ItemData)
                            for i, v in pairs(getrenv()._G.data.inventory) do
                                if itemsData[v.name] then
                                    if v.name == selecteditemdrop3 then
                                        game:GetService("ReplicatedStorage").Events.DropBagItem:FireServer(i)
                                    end
                                end
                            end
                        end)]]
                    end)
                end
            end)
        end
    end)
    


    local MakeYourOwnFarmTpFarm = Window:CreateTab("TP-Pos")
    
    
    local selectedposition11
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 1 (2)", function()
        selectedposition11 = nil
        wait()
        selectedposition11 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition21
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 2 (2)", function()
        selectedposition21 = nil
        wait()
        selectedposition21 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    getgenv().autotpselectedpos1 = false
    MakeYourOwnFarmTpFarm:CreateToggle("Auto Teleport Selected Position (2)", function(bool)
        getgenv().autotpselectedpos1 = bool
        if bool then
            spawn(function()
                while autotpselectedpos1 do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition11
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        task.wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition21
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        task.wait(tweenspeed)
                    end)
                end
            end)
        end
    end)
    
    MakeYourOwnFarmTpFarm:CreateBlankLabel("")
    
    local selectedposition1v2
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 1 (5)", function()
        selectedposition1v2 = nil
        wait()
        selectedposition1v2 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition2v2
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 2 (5)", function()
        selectedposition2v2 = nil
        wait()
        selectedposition2v2 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition3v2
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 3 (5)", function()
        selectedposition3v2 = nil
        wait()
        selectedposition3v2 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition4v2
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 4 (5)", function()
        selectedposition4v2 = nil
        wait()
        selectedposition4v2 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition5v2
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 5 (5)", function()
        selectedposition5v2 = nil
        wait()
        selectedposition5v2 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    getgenv().autotpselectedposv2 = false
    MakeYourOwnFarmTpFarm:CreateToggle("Auto Teleport Selected Position (5)", function(bool)
        getgenv().autotpselectedposv2 = bool
        if bool then
            spawn(function()
                while autotpselectedposv2 do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition1v2
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition2v2
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition3v2
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition4v2
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition5v2
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                    end)
                end
            end)
        end
    end)
    
    MakeYourOwnFarmTpFarm:CreateBlankLabel("")
    
    local selectedposition1v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 1 (10)", function()
        selectedposition1v3 = nil
        wait()
        selectedposition1v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition2v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 2 (10)", function()
        selectedposition2v3 = nil
        wait()
        selectedposition2v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition3v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 3 (10)", function()
        selectedposition3v3 = nil
        wait()
        selectedposition3v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition4v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 4 (10)", function()
        selectedposition4v3 = nil
        wait()
        selectedposition4v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition5v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 5 (10)", function()
        selectedposition5v3 = nil
        wait()
        selectedposition5v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition6v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 6 (10)", function()
        selectedposition6v3 = nil
        wait()
        selectedposition6v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition7v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 7 (10)", function()
        selectedposition7v3 = nil
        wait()
        selectedposition7v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition8v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 8 (10)", function()
        selectedposition8v3 = nil
        wait()
        selectedposition8v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition9v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 9 (10)", function()
        selectedposition9v3 = nil
        wait()
        selectedposition9v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition10v3
    MakeYourOwnFarmTpFarm:CreateButton("Select Position 10 (10)", function()
        selectedposition10v3 = nil
        wait()
        selectedposition10v3 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    
    getgenv().autotpselectedposv3 = false
    MakeYourOwnFarmTpFarm:CreateToggle("Auto Teleport Selected Position (10)", function(bool)
        getgenv().autotpselectedposv3 = bool
        if bool then
            spawn(function()
                while autotpselectedposv3 do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition1v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition2v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition3v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition4v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition5v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition6v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition7v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition8v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition9v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local CFrameEnd = selectedposition10v3
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - CFrameEnd.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        tween:Play()
                        wait(tweenspeed)
                    end)
                end
            end)
        end
    end)




    local MakeYourOwnFarmWalkFarm = Window:CreateTab("Walk-Pos")

    MakeYourOwnFarmWalkFarm:CreateBlankLabel("Safer Than TP-Position")

    MakeYourOwnFarmWalkFarm:CreateBlankLabel("Lower Jump Power Is better.")

    MakeYourOwnFarmWalkFarm:CreateSlider('Jump Power Changer', {
        Min = 1,
        Max = 100,
        Default = 0
    }, function(value)
        getgenv().JumpPowerChanger = value
        spawn(function()
            while wait() do
                pcall(function()
                    spawn(function()
                        game.Players.LocalPlayer.Character.Humanoid.JumpPower = getgenv().JumpPowerChanger
                    end)
                end)
            end
        end)
    end)
    MakeYourOwnFarmWalkFarm:CreateBlankLabel("Use Auto Jump So Your Player Wont Get Stuck.")
    getgenv().AutoJumpWalkPos = false
    MakeYourOwnFarmWalkFarm:CreateToggle("Auto Jump", function(bool)
        getgenv().AutoJumpWalkPos = bool
        if bool then
            spawn(function()
                while AutoJumpWalkPos do wait()
                    pcall(function()
                        game.Players.LocalPlayer.Character.Humanoid.Jump = true 
                    end)
                end
            end)
        end
    end)
    MakeYourOwnFarmWalkFarm:CreateBlankLabel("")
    local selectedposition11walk = nil
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 1 (2)", function()
        selectedposition11walk = nil
        wait()
        selectedposition11walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)

    local selectedposition21walk = nil
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 2 (2)", function()
        selectedposition21walk = nil
        wait()
        selectedposition21walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)

    getgenv().autotpselectedpos1walk = false
    MakeYourOwnFarmWalkFarm:CreateToggle("Auto Walk To Selected Position", function(bool)
        getgenv().autotpselectedpos1walk = bool
        if bool then
            spawn(function()
                while autotpselectedpos1walk do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition11walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                        
                        while autotpselectedpos1walk and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition11walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition21walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedpos1walk and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition21walk.p)
                        end
                    end)
                    wait()
                end
            end)
        end
    end)
    
    MakeYourOwnFarmWalkFarm:CreateBlankLabel("")
    
    local selectedposition1v2walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 1 (5)", function()
        selectedposition1v2walk = nil
        wait()
        selectedposition1v2walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition2v2walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 2 (5)", function()
        selectedposition2v2walk = nil
        wait()
        selectedposition2v2walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition3v2walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 3 (5)", function()
        selectedposition3v2walk = nil
        wait()
        selectedposition3v2walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition4v2walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 4 (5)", function()
        selectedposition4v2walk = nil
        wait()
        selectedposition4v2walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition5v2walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 5 (5)", function()
        selectedposition5v2walk = nil
        wait()
        selectedposition5v2walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    getgenv().autotpselectedposv2 = false
    MakeYourOwnFarmWalkFarm:CreateToggle("Auto Walk To Selected Position (5)", function(bool)
        getgenv().autotpselectedposv2 = bool
        if bool then
            spawn(function()
                while autotpselectedposv2 do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition1v2walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                        
                        while autotpselectedposv2 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition1v2walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition2v2walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv2 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition2v2walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition3v2walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv2 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition3v2walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition4v2walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv2 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition4v2walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition5v2walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv2 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition5v2walk.p)
                        end
                    end)
                    wait()
                end
            end)
        end
    end)
    
    MakeYourOwnFarmWalkFarm:CreateBlankLabel("")
    
    local selectedposition1v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 1 (10)", function()
        selectedposition1v3walk = nil
        wait()
        selectedposition1v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition2v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 2 (10)", function()
        selectedposition2v3walk = nil
        wait()
        selectedposition2v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition3v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 3 (10)", function()
        selectedposition3v3walk = nil
        wait()
        selectedposition3v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition4v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 4 (10)", function()
        selectedposition4v3walk = nil
        wait()
        selectedposition4v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition5v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 5 (10)", function()
        selectedposition5v3walk = nil
        wait()
        selectedposition5v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition6v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 6 (10)", function()
        selectedposition6v3walk = nil
        wait()
        selectedposition6v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition7v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 7 (10)", function()
        selectedposition7v3walk = nil
        wait()
        selectedposition7v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition8v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 8 (10)", function()
        selectedposition8v3walk = nil
        wait()
        selectedposition8v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition9v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 9 (10)", function()
        selectedposition9v3walk = nil
        wait()
        selectedposition9v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    local selectedposition10v3walk
    MakeYourOwnFarmWalkFarm:CreateButton("Select Position 10 (10)", function()
        selectedposition10v3walk = nil
        wait()
        selectedposition10v3walk = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    end)
    
    
    getgenv().autotpselectedposv3 = false
    MakeYourOwnFarmWalkFarm:CreateToggle("Auto Walk To Selected Position (10)", function(bool)
        getgenv().autotpselectedposv3 = bool
        if bool then
            spawn(function()
                while autotpselectedposv3 do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition1v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                        
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition1v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition2v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition2v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition3v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition3v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition4v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition4v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition5v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition5v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition6v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition6v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition7v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition7v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition8v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition8v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition9v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition9v3walk.p)
                        end
                        wait()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
                        local walkspeedtime = math.round(math.abs((HRP.Position - selectedposition10v3walk.p).Magnitude))/tonumber(walkspeed)
                        local startTime = os.time()                         
                        while autotpselectedposv3 and os.time() - startTime < walkspeedtime do wait()
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(selectedposition10v3walk.p)
                        end
                    end)
                    wait()
                end
            end)
        end
    end)
    
    
    local Farmm = Window:CreateTab("Farming")
    
    Farmm:CreateButton("Stop TP", function()
        local Plrs = game:GetService("Players")
        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
        local CFrameEnd = HRP.CFrame
        local tpspeed = 1000
        local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
        tween:Play()
    end)
    
    local plantlist = {
        "Bloodfruit",
        "Pumpkin",
        "Strangefruit",
        "Oddberry",
        "Lemon",
        "Apple",
        "Coconut",
        "Jelly",
        "Sunfruit",
        "Bluefruit",
        "Berry",
        "Orange",
        "Cloudberry",
        "Strawberry",
        "Banana",
        "Prickly Pear"
    }
    local selectedplant
    Farmm:CreateDropdown('Select Plant - 1', plantlist, function(output)
        selectedplant = output
    end)

    local PlantingList = {}
    --getgenv().itemsData = require(game:GetService("ReplicatedStorage").Modules.ItemData)
    --for i, v in pairs(getrenv()._G.data.inventory) do
    --    if itemsData[v.name].nourishment then
    --        table.insert(PlantingList,v.name)
    --    end
    --end
    local selectedplant2
    Farmm:CreateDropdown('Select Plant - 2', PlantingList, function(output)
        selectedplant2 = output
    end)

    Farmm:CreateSlider('Plant Farming Distance', {
        Min = 1,
        Max = 30,
        Default = 20
    }, function(value)
        getgenv().FarmingDistance = value
    end)
    Farmm:CreateBlankLabel("Use both farm plant if you want.")
    getgenv().autofarmplant = false
    Farmm:CreateToggle("Auto Farm Plant, Nearest", function(bool)
    getgenv().autofarmplant = bool
        if bool then
            spawn(function()
                while autofarmplant do wait()
                    pcall(function()
                        function getNear()
                            local near  
                            local nearr = getgenv().FarmingDistance or 20
                            local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                            for i,v in pairs(game:GetService("Workspace").Deployables:GetChildren()) do
                                if not v:FindFirstChild(selectedplant2 or selectedplant) then
                                    if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                        near = v:FindFirstChildWhichIsA("BasePart")
                                        nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                    end
                                end
                            end 
                            return near
                        end
                        local nearest = getNear()    
                        if nearest and (selectedplant2 or selectedplant) then
                            local args = {
                                [1] = nearest.Parent,
                                [2] = selectedplant2 or selectedplant
                            }
                            game:GetService("ReplicatedStorage").Events.InteractStructure:FireServer(unpack(args))
                            game:GetService("ReplicatedStorage").Events.lnteractStructure:FireServer(unpack(args))
                        end
                    end)
                end
            end)
        end
    end)

    getgenv().autofarmplant2 = false
    Farmm:CreateToggle("Auto Farm Plant, Normal", function(bool)
    getgenv().autofarmplant2 = bool
        if bool then
            spawn(function()
                while autofarmplant2 do wait()
                    pcall(function()
                        local near  
                        local nearr = getgenv().FarmingDistance or 20
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetChildren()) do
                            if not v:FindFirstChild(selectedplant2 or selectedplant) then
                                if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                    local args = {
                                        [1] = v,
                                        [2] = selectedplant2 or selectedplant
                                    }
                                    game:GetService("ReplicatedStorage").Events.InteractStructure:FireServer(unpack(args))
                                    game:GetService("ReplicatedStorage").Events.lnteractStructure:FireServer(unpack(args))
                                    wait()
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)

    Farmm:CreateBlankLabel("")

    Farmm:CreateSlider('Plant Harvest Distance', {
        Min = 1,
        Max = 50,
        Default = 30
    }, function(value)
        getgenv().FarmingDistanceHarvest = value
    end)

    getgenv().autoharvest = false
    Farmm:CreateToggle("Auto Harvest Plant", function(bool)
    getgenv().autoharvest = bool
        if bool then
            spawn(function()
                while autoharvest do wait()
                    pcall(function()
                        local nearr = getgenv().FarmingDistanceHarvest or 30
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("Model") then
                                if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                    game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
      
    Farmm:CreateBlankLabel("")

    getgenv().autoharvest = false
    Farmm:CreateToggle("Auto Harvest Plant-Walk", function(bool)
    getgenv().autoharvest = bool
        if bool then
            spawn(function()
                while autoharvest do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        function getNear()
                            local near
                            local nearr = 100, nil
                            for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                                if v:FindFirstChild("Pickup") and v:IsA("Model") then
                                    if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                        near = v:FindFirstChildWhichIsA("BasePart")
                                        nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(nearest.Parent)
                        game.Players.LocalPlayer.Character.Humanoid:MoveTo(nearest.Position)
                    end)
                end
            end)
        end
    end)
    
    getgenv().autoharvest = false
    Farmm:CreateToggle("Auto Harvest Plant-TP", function(bool)
    getgenv().autoharvest = bool
        if bool then
            spawn(function()
                while autoharvest do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        function getNear()
                            local near
                            local nearr = 100, nil
                            for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                                if v:FindFirstChild("Pickup") and v:IsA("Model") then
                                    if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                        near = v:FindFirstChildWhichIsA("BasePart")
                                        nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local CFrameEnd = nearest.CFrame * CFrame.new(0,nearest.Size.Y,0)
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - nearest.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(nearest.Parent)
                        tween:Play()
                    end)
                end
            end)
        end
    end)

    Farmm:CreateBlankLabel("")
    
    getgenv().autoplantbox = false
    Farmm:CreateToggle("Auto Place Plant Box", function(bool)
    getgenv().autoplantbox = bool
        if bool then
            spawn(function()
                while autoplantbox do wait()
                    pcall(function()
                        local str = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Panels.Topbar.EssenceBar.TextLabel.Text
                        local currentlvl, replaced = string.gsub(str, "lvl ", "")
                        if tonumber(currentlvl) > 5 then
                            local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                            local args = {
                                [1] = "Plant Box",
                                [2] = CFrame.new(HRP.X, HRP.Y*2, HRP.Z) * CFrame.Angles(-0, 0, -0),
                                [3] = 0
                            }
                            game:GetService("ReplicatedStorage").Events.PlaceStructure:FireServer(unpack(args))
                        end 
                    end)
                end
            end)
        end
    end)

    getgenv().autoplantbox3x = false
    Farmm:CreateToggle("Auto Place Plant Box 1, Down/Left/Right", function(bool)
    getgenv().autoplantbox3x = bool
        if bool then
            spawn(function()
                while autoplantbox3x do wait()
                    pcall(function()
                        local str = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Panels.Topbar.EssenceBar.TextLabel.Text
                        local currentlvl, replaced = string.gsub(str, "lvl ", "")
                        if tonumber(currentlvl) > 5 then
                            local LPRCF = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
                            local PBRemote = game:GetService("ReplicatedStorage").Events.PlaceStructure
                            --down,right,left
                            PBRemote:FireServer("Plant Box", CFrame.new(LPRCF.X, -6, LPRCF.Z), 2)
                            PBRemote:FireServer("Plant Box", CFrame.new(LPRCF.X-8, -6, LPRCF.Z), 2)
                            PBRemote:FireServer("Plant Box", CFrame.new(LPRCF.X+8, -6, LPRCF.Z), 2)
                            wait()
                        end 
                    end)
                end
            end)
        end
    end)

    getgenv().autoplantbox3x2 = false
    Farmm:CreateToggle("Auto Place Plant Box 2, Down/Left/Right", function(bool)
    getgenv().autoplantbox3x2 = bool
        if bool then
            spawn(function()
                while autoplantbox3x2 do wait()
                    pcall(function()
                        local str = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Panels.Topbar.EssenceBar.TextLabel.Text
                        local currentlvl, replaced = string.gsub(str, "lvl ", "")
                        if tonumber(currentlvl) > 5 then
                            local LPRCF = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
                            local PBRemote = game:GetService("ReplicatedStorage").Events.PlaceStructure
                            --down,right,left
                            PBRemote:FireServer("Plant Box", CFrame.new(LPRCF.X, -6, LPRCF.Z), 2)
                            PBRemote:FireServer("Plant Box", CFrame.new(LPRCF.X, -6, LPRCF.Z-8), 2)
                            PBRemote:FireServer("Plant Box", CFrame.new(LPRCF.X, -6, LPRCF.Z+8), 2)
                            wait()
                        end 
                    end)
                end
            end)
        end
    end)
    
    getgenv().autocoinpressgold = false
    Farmm:CreateToggle("Auto Coin Press(Gold)", function(bool)
    getgenv().autocoinpressgold = bool
        if bool then
            spawn(function()
                while autocoinpressgold do wait()
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetChildren()) do
                            if v.Name == "Coin Press" then
                                local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                                if (HRP.Position - v:FindFirstChild("InteractPart").Position).Magnitude < 50 then
                                    local args = {
                                        [1] = v,
                                        [2] = "Gold"
                                    }
                                    game:GetService("ReplicatedStorage").Events.InteractStructure:FireServer(unpack(args))
                                    game:GetService("ReplicatedStorage").Events.lnteractStructure:FireServer(unpack(args))
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    getgenv().autocollectcoinpress = false
    Farmm:CreateToggle("Auto Collect Coin(Coin Press)", function(bool)
    getgenv().autocollectcoinpress = bool
        if bool then
            spawn(function()
                while autocollectcoinpress do wait()
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace").ItemDrops:GetChildren()) do
                            if v.Name:find("Coin") then
                                local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                                if (HRP.Position - v.Position).Magnitude < 50 then
                                    game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)
    
    
    local ESP = Window:CreateTab("ESP")

    
    getgenv().BirdEsp = false    
    ESP:CreateToggle("Bird Esp", function(bool)
        getgenv().BirdEsp = bool    
        if bool then
            spawn(function()
                while BirdEsp do wait()
                    pcall(function()    
                        for i,v in pairs (game:GetService("Workspace").Critters:GetChildren()) do
                            if v.Name:find("Bird") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 0, 0)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(196, 40, 28)
                                else
                                    if v:FindFirstChildWhichIsA("BillboardGui") then
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs (game:GetService("Workspace").Critters:GetChildren()) do
                        if v.Name:find("Bird") then
                            v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)

    getgenv().espplayers = false
    ESP:CreateToggle("Player Esp", function(bool)
        getgenv().espplayers = bool
        if bool then
            spawn(function()
                while espplayers do wait()
                    pcall(function()
                        for i,v in pairs (game:GetService("Players"):GetPlayers()) do
                            if v ~= game:GetService("Players").LocalPlayer then
                                if v.Character:FindFirstChild("Head") then
                                    if not v.Character.Head:FindFirstChildWhichIsA("BillboardGui") then
                                        local gui = Instance.new("BillboardGui",v.Character.Head)
                                        local esp = Instance.new("TextLabel",gui)
                                        gui.Name = v.Name
                                        gui.ResetOnSpawn = false
                                        gui.AlwaysOnTop = true;
                                        gui.LightInfluence = 0;
                                        gui.Size = UDim2.new(0, 10, 0, 10)
                                        esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) .."m")
                                        esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                        esp.BorderSizePixel = 4;
                                        esp.BorderColor3 = Color3.new(255, 0, 0)
                                        esp.BorderSizePixel = 0
                                        esp.Font = "GothamMedium"
                                        esp.TextSize = 15
                                        esp.TextColor3 = Color3.fromRGB(255, 0, 0)
                                    else
                                        v.Character.Head:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs (game:GetService("Players"):GetPlayers()) do
                        if v ~= game:GetService("Players").LocalPlayer then
                            if v.Character:FindFirstChild("Head") then
                                if v.Character.Head:FindFirstChildWhichIsA("BillboardGui") then
                                    v.Character.Head:FindFirstChildWhichIsA("BillboardGui"):Remove()
                                end
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)

    --[[
    getgenv().esppirate = false
    ESP:CreateToggle("Pirate Esp", function(bool)
        getgenv().esppirate = bool
        if bool then
            spawn(function()
                while esppirate do wait()
                    pcall(function()
                        for i,v in pairs(game.Workspace:GetChildren()) do
                            if v.Name:find("Pirate") then
                                if v:FindFirstChildWhichIsA("BasePart") then
                                    if not v.VehicleSeat:FindFirstChildWhichIsA("BillboardGui") then
                                        local gui = Instance.new("BillboardGui",v.VehicleSeat)
                                        local esp = Instance.new("TextLabel",gui)
                                        gui.Name = v.Name
                                        gui.ResetOnSpawn = false
                                        gui.AlwaysOnTop = true;
                                        gui.LightInfluence = 0;
                                        gui.Size = UDim2.new(0, 10, 0, 10)
                                        esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.VehicleSeat.Position).Magnitude/3) .."m")
                                        esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                        esp.BorderSizePixel = 4;
                                        esp.BorderColor3 = Color3.new(255, 0, 0)
                                        esp.BorderSizePixel = 0
                                        esp.Font = "GothamMedium"
                                        esp.TextSize = 15
                                        esp.TextColor3 = Color3.fromRGB(255, 0, 0)
                                    else
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.VehicleSeat.Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("ReplicatedStorage").Deployables:GetChildren()) do
                            if v.Name:find("Pirate") then
                                if v:FindFirstChildWhichIsA("BasePart") then
                                    if not v.VehicleSeat:FindFirstChildWhichIsA("BillboardGui") then
                                        local gui = Instance.new("BillboardGui",v:FindFirstChildWhichIsA("BasePart"))
                                        local esp = Instance.new("TextLabel",gui)
                                        gui.Name = v.Name
                                        gui.ResetOnSpawn = false
                                        gui.AlwaysOnTop = true;
                                        gui.LightInfluence = 0;
                                        gui.Size = UDim2.new(0, 10, 0, 10)
                                        esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.VehicleSeat.Position).Magnitude/3) .."m")
                                        esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                        esp.BorderSizePixel = 4;
                                        esp.BorderColor3 = Color3.new(255, 0, 0)
                                        esp.BorderSizePixel = 0
                                        esp.Font = "GothamMedium"
                                        esp.TextSize = 15
                                        esp.TextColor3 = Color3.fromRGB(255, 0, 0)
                                    else
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.VehicleSeat.Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs (game.Workspace:GetChildren()) do
                        for g,h in pairs(game:GetService("ReplicatedStorage").Deployables:GetChildren()) do
                            if v.Name:find("Pirate") or h.Name:find("Pirate") then
                                if v:FindFirstChildWhichIsA("BillboardGui") or h:FindFirstChildWhichIsA("BillboardGui") then
                                    spawn(function()
                                        v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                                    end)
                                    spawn(function()
                                        h:FindFirstChildWhichIsA("BillboardGui"):Remove()
                                    end)
                                end
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
]]

    getgenv().EggsEsp = false    
    ESP:CreateToggle("Eggs Esp", function(bool)
        getgenv().EggsEsp = bool    
        if bool then
            spawn(function()
                while EggsEsp do wait()
                    pcall(function()    
                        for i,v in pairs(game:GetService("Workspace").Eggs:GetChildren()) do
                            if v.Name:find("Egg") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 0, 0)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(95, 89, 95)
                                else
                                    if v:FindFirstChildWhichIsA("BillboardGui") then
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game:GetService("Workspace").Eggs:GetChildren()) do
                        if v.Name:find("Egg") then
                            v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    --[[
    getgenv().PotOGold = false    
    ESP:CreateToggle("Pot O' Gold Esp", function(bool)
        getgenv().PotOGold = bool    
        if bool then
            spawn(function()
                while PotOGold do wait()
                    pcall(function()    
                        for i,v in pairs(game:GetService("Workspace").Locations:GetChildren()) do
                            if v.Name:find("Pot O' Gold") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 0, 0)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(255, 0, 0)
                                else
                                    if v:FindFirstChildWhichIsA("BillboardGui") then
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game:GetService("Workspace").Locations:GetChildren()) do
                        if v.Name:find("Pot O' Gold") then
                            v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    ]]
    --[[
    getgenv().hearteps = false    
    ESP:CreateToggle("Heart Esp", function(bool)
        getgenv().hearteps = bool    
        if bool then
            spawn(function()
                while hearteps do wait()
                    pcall(function()    
                        for i,v in pairs(game:GetService("Workspace").Hearts:GetChildren()) do
                            if v.Name:find("Heart") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = v.Name
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 0, 0)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(255, 0, 0)
                                end
                            end
                        end
                    end)
                wait(5)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game:GetService("Workspace").Hearts:GetChildren()) do
                        if v.Name:find("Heart") then
                            v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    ]]


--[[
    getgenv().espplayers = false
    ESP:CreateToggle("Player Esp", function(bool)
        getgenv().espplayers = bool
        local esp_settings = { ---- table for esp settings 
        textsize = 15,
        }
        local gui = Instance.new("BillboardGui")
        local esp = Instance.new("TextLabel",gui) ---- new instances to make the billboard gui and the textlabel
    
        gui.Name = "DEVIL Esp"; ---- properties of the esp
        gui.ResetOnSpawn = false
        gui.AlwaysOnTop = true;
        gui.LightInfluence = 0;
        gui.Size = UDim2.new(0, 10, 0, 10)
        esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
        esp.Text = ""
        esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
        esp.BorderSizePixel = 4;
        esp.BorderSizePixel = 0
        esp.Font = "GothamMedium"
        esp.TextSize = esp_settings.textsize
        spawn(function()
            while espplayers do wait()
                pcall(function()
                    for i,v in pairs (game:GetService("Players"):GetPlayers()) do
                        if v ~= game:GetService("Players").LocalPlayer and v.Character.Head:FindFirstChild("DEVIL Esp") == nil  then -- craeting checks for team check, local player etc
                            esp.Text = v.Name
                            esp.TextColor3 = v.Character["UpperTorso"].Color
                            gui:Clone().Parent = v.Character.Head
                        end
                    end
                end)
                wait(0.5)
            end
        end)
        if not bool then
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs (game:GetService("Players"):GetPlayers()) do
                        for a,b in pairs(v.Character.Head:GetChildren()) do
                            if b.Name == "DEVIL Esp" then
                                b.Parent = nil
                                b:Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)]]
    
    getgenv().crittersesp = false    
    ESP:CreateToggle("Critters Esp(Mob)", function(bool)
        getgenv().crittersesp = bool    
        if bool then
            spawn(function()
                while crittersesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.workspace.Critters:GetChildren()) do
                            if not v:FindFirstChildWhichIsA("BillboardGui") then
                                local gui = Instance.new("BillboardGui",v)
                                local esp = Instance.new("TextLabel",gui)
                                gui.Name = v.Name
                                gui.ResetOnSpawn = false
                                gui.AlwaysOnTop = true;
                                gui.LightInfluence = 0;
                                gui.Size = UDim2.new(0, 10, 0, 10)
                        
                                esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                esp.BorderSizePixel = 4;
                                esp.BorderColor3 = Color3.new(0,0,0)
                                esp.BorderSizePixel = 0
                                esp.Font = "GothamMedium"
                                esp.TextSize = 15
                                esp.TextColor3 = Color3.fromRGB(0,0,0)
                            else
                                v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.workspace.Critters:GetChildren()) do
                        if v:FindFirstChildWhichIsA("BillboardGui") then
                            v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().ironesp = false    
    ESP:CreateToggle("Iron Esp", function(bool)
        getgenv().ironesp = bool    
        if bool then
            spawn(function()
                while ironesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.workspace:GetChildren()) do
                            if v.Name:find("Iron") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(92, 64, 51)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(92, 64, 51)
                                else
                                    v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.workspace:GetChildren()) do
                        if v.Name:find("Iron") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().goldesp = false    
    ESP:CreateToggle("Gold Esp", function(bool)
        getgenv().goldesp = bool   
        if bool then 
            spawn(function()
                while goldesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.workspace:GetChildren()) do
                            if v.Name:find("Gold") then
                                if v:FindFirstChildWhichIsA("BasePart") then
                                    if not v:FindFirstChildWhichIsA("BillboardGui") then
                                        local gui = Instance.new("BillboardGui",v)
                                        local esp = Instance.new("TextLabel",gui)
                                        gui.Name = v.Name
                                        gui.ResetOnSpawn = false
                                        gui.AlwaysOnTop = true;
                                        gui.LightInfluence = 0;
                                        gui.Size = UDim2.new(0, 10, 0, 10)
                                        print(v:FindFirstChildWhichIsA("BasePart").Position)
                                        esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                        esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                        esp.BorderSizePixel = 4;
                                        esp.BorderColor3 = Color3.new(249, 214, 46)
                                        esp.BorderSizePixel = 0
                                        esp.Font = "GothamMedium"
                                        esp.TextSize = 15
                                        esp.TextColor3 = Color3.fromRGB(249, 214, 46)
                                    else
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.workspace:GetChildren()) do
                        if v.Name:find("Gold") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().godenmobesp = false    
    ESP:CreateToggle("Goden Mob Esp", function(bool)
        getgenv().godenmobesp = bool    
        if bool then
            spawn(function()
                while godenmobesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.workspace.Critters:GetChildren()) do
                            if v.Name:find("Gold") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(249, 214, 46)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(249, 214, 46)
                                else
                                    v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.workspace.Critters:GetChildren()) do
                        if v:FindFirstChildWhichIsA("BillboardGui") then
                            v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().fireesp = false    
    ESP:CreateToggle("Fire Esp", function(bool)
        getgenv().fireesp = bool 
        if bool then   
            spawn(function()
                while fireesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.workspace:GetChildren()) do
                            if v.Name:find("Fire") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 10, 30)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(255, 10, 30)
                                else
                                    v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.workspace:GetChildren()) do
                        if v.Name:find("Fire") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().aduriteesp = false    
    ESP:CreateToggle("Adurite Esp", function(bool)
        getgenv().aduriteesp = bool    
        if bool then
            spawn(function()
                while aduriteesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.Workspace.Resources:GetChildren()) do
                            if v.Name:find("Adurite") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 10, 30)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(255, 10, 30)
                                else
                                    v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.Workspace.Resources:GetChildren()) do
                        if v.Name:find("Adurite") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().crystalesp = false    
    ESP:CreateToggle("Crystal Esp", function(bool)
        getgenv().crystalesp = bool    
        if bool then
            spawn(function()
                while crystalesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.Workspace.Resources:GetChildren()) do
                            if v.Name:find("Crystal") then
                                if v:FindFirstChildWhichIsA("BasePart") then
                                    if not v:FindFirstChildWhichIsA("BillboardGui") then
                                        local gui = Instance.new("BillboardGui",v)
                                        local esp = Instance.new("TextLabel",gui)
                                        gui.Name = v.Name
                                        gui.ResetOnSpawn = false
                                        gui.AlwaysOnTop = true;
                                        gui.LightInfluence = 0;
                                        gui.Size = UDim2.new(0, 10, 0, 10)
                                
                                        esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                        esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                        esp.BorderSizePixel = 4;
                                        esp.BorderColor3 = Color3.new(70, 206, 235)
                                        esp.BorderSizePixel = 0
                                        esp.Font = "GothamMedium"
                                        esp.TextSize = 15
                                        esp.TextColor3 = Color3.fromRGB(70, 206, 235)
                                    else
                                        v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    end
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.Workspace.Resources:GetChildren()) do
                        if v.Name:find("Crystal") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().godesp = false    
    ESP:CreateToggle("God Esp", function(bool)
        getgenv().godesp = bool    
        if bool then
            spawn(function()
                while godesp do wait()
                    pcall(function()    
                        for i,v in pairs(game.workspace.Resources:GetChildren()) do
                            if v.Name:find("God") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(255, 255, 255)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(255, 255, 255)
                                else
                                    v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                end
                            end
                        end
                    end)
                    wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game.workspace.Resources:GetChildren()) do
                        if v.Name:find("God") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    getgenv().droppeditem = false    
    ESP:CreateToggle("Dropped Item Esp", function(bool)
        getgenv().droppeditem = bool    
        if bool then
            spawn(function()
                while droppeditem do wait()
                    pcall(function()    
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") then
                                if not v:FindFirstChildWhichIsA("BillboardGui") then
                                    local gui = Instance.new("BillboardGui",v)
                                    local esp = Instance.new("TextLabel",gui)
                                    gui.Name = v.Name
                                    gui.ResetOnSpawn = false
                                    gui.AlwaysOnTop = true;
                                    gui.LightInfluence = 0;
                                    gui.Size = UDim2.new(0, 10, 0, 10)
                            
                                    esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                    esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) .."m")
                                    esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                    esp.BorderSizePixel = 4;
                                    esp.BorderColor3 = Color3.new(0,0,0)
                                    esp.BorderSizePixel = 0
                                    esp.Font = "GothamMedium"
                                    esp.TextSize = 15
                                    esp.TextColor3 = Color3.fromRGB(0,0,0)
                                else
                                    v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                                end
                            end
                        end
                    end)
                    for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                        if v:FindFirstChild("Pickup") and v:IsA("BasePart") then
                            if not v:FindFirstChildWhichIsA("BillboardGui") then
                                local gui = Instance.new("BillboardGui",v)
                                local esp = Instance.new("TextLabel",gui)
                                gui.Name = v.Name
                                gui.ResetOnSpawn = false
                                gui.AlwaysOnTop = true;
                                gui.LightInfluence = 0;
                                gui.Size = UDim2.new(0, 10, 0, 10)
                        
                                esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                esp.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) .."m")
                                esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
                                esp.BorderSizePixel = 4;
                                esp.BorderColor3 = Color3.new(0,0,0)
                                esp.BorderSizePixel = 0
                                esp.Font = "GothamMedium"
                                esp.TextSize = 15
                                esp.TextColor3 = Color3.fromRGB(0,0,0)
                            else
                                v:FindFirstChildWhichIsA("BillboardGui").TextLabel.Text = (v.Name ..", "..math.round((game.Players.LocalPlayer.Character.Head.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude/3) .."m")
                            end
                        end
                    end
                wait(0.1)
                end
            end)
        end
        if bool then
        else
            pcall(function()
                for i = 1,10 do
                    for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                        if v:FindFirstChild("Pickup") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                        if v:FindFirstChild("Pickup") then
                            if v:FindFirstChildWhichIsA("BillboardGui") then
                                v:FindFirstChildWhichIsA("BillboardGui"):Remove()
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    local Extra = Window:CreateTab("Extra!!!")

    getgenv().OpenAndCloseDoor = false
    Extra:CreateToggle("Open/Close Door", function(bool)
        getgenv().OpenAndCloseDoor = bool
        if bool then
            spawn(function()
                while OpenAndCloseDoor do wait()
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetChildren()) do
                            if v.Name:find("Hut") then
                                game:GetService("ReplicatedStorage").Events.ToggleDoor:FireServer(v)
                            end
                        end
                    end)
                    wait()
                end
            end)
        end
    end)
    
    getgenv().gothroughDeployables = false
    Extra:CreateToggle("Go Through Door", function(bool)
        getgenv().gothroughDeployables = bool
        if bool then
            spawn(function()
                while gothroughDeployables do wait()
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace").Deployables:GetDescendants()) do
                            if v.Name == "Door" then
                                v.Transparency = 0.5
                                v.CanCollide = false
                            end
                        end
                    end)
                    wait()
                end
            end)
        end
    end)

    Extra:CreateButton("Jail(Hut) Nearest Enemy", function()
        local Plrs = game:GetService("Players")
        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
        local wrkspc = game:GetService("Workspace")
        local RepS = game:GetService("ReplicatedStorage")
        function getNear()
            local near  
            local nearr = 500, nil
            for i,v in pairs(Plrs:GetPlayers()) do
                if v ~= Plrs.LocalPlayer and v.Character.HumanoidRootPart then
                    if (HRP.Position - v.Character.HumanoidRootPart.Position).Magnitude < nearr then
                        near = v.Character.HumanoidRootPart
                        nearr = (HRP.Position - v.Character.HumanoidRootPart.Position).Magnitude
                    end
                end
            end
            return near
        end
        local nearest = getNear()
        local HRP = nearest.Position
        local args = {
            [1] = "Big Ol' Hut",
            [2] = CFrame.new(HRP.X-5, HRP.Y*2.3, HRP.Z-5) * CFrame.Angles(-0, 0, -0),
            [3] = 0
        }
        game:GetService("ReplicatedStorage").Events.PlaceStructure:FireServer(unpack(args))
    end)
    
    
    Extra:CreateButton("Equip God Armor", function()
        local GItems = {
            "God Halo",
            "God Chestplate",
            "God Legs"
        }
        for i,v in pairs(GItems) do
            game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(v)
            game:GetService("ReplicatedStorage").Events.UseBagltem:FireServer(v)
        end
    end)

    Extra:CreateButton("UnEquip God Armor", function()
        local GItems = {
            "God Halo",
            "God Chestplate",
            "God Legs"
        }
        for i,v in pairs(GItems) do
            game:GetService("ReplicatedStorage").Events.UnequipArmor:FireServer(v)
        end
    end)

    Extra:CreateButton("Teleport To Rope(Patched)", function()
        --[[local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
        if getgenv().ScriptRunningTP100 == true then
            print("Bruh Dont Click It Twice")
        else
            getgenv().ScriptRunningTP100 = true
            Speeder()
            repeat wait() game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90 
            game.Players.LocalPlayer.Character.Humanoid.Jump = true 
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-522.939392, -3.00000072, -607.598816, -0.206055105, -7.52511298e-08, -0.978540361, 7.85444456e-08, 1, -9.34408177e-08, 0.978540361, -9.61128706e-08, -0.206055105)) until 
            (HRP.Position - Vector3.new(-522.939392, -3.00000072, -607.598816, -0.206055105, -7.52511298e-08, -0.978540361, 7.85444456e-08, 1, -9.34408177e-08, 0.978540361, -9.61128706e-08, -0.206055105)).Magnitude < 1
            game.Players.LocalPlayer.Character.Humanoid.Jump = false
            wait(0.5) 
            HRP.CFrame = CFrame.new(-519.425598, 31.9920807, -607.562988, -0.0907670483, 4.3253511e-08, -0.99587214, -8.0506652e-08, 1, 5.07704385e-08, 0.99587214, 8.478262e-08, -0.0907670483)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            SpeedBool = false
            getgenv().ScriptRunningTP100 = false
        end]]
    end)


    local Combat = Window:CreateTab("Combat/Heal")

    
    local foodList = {
        "Berry",
        "Cloudberry",
        "Apple",
        "Orange",
        "Lemon",
        "Strawberry",
        "Banana",
        "Bloodfruit",
        "Bluefruit",
        "Sunfruit",
        "Oddberry",
        "Strangefruit",
        "Prickly Pear",
        "Pumpkin",
        "Frozen Pumpkin",
        "Corn",
        "Corn Mush",
        "Coconut",
        "Cactus Bit",
        "Raw Meat",
        "Raw Morsel",
        "Raw Fish",
        "Barley",
        "Grain Mush",
        "Egg",
        "Jelly",
        "Frozen Peeper Popsicle",
        "Fruitcake",
        "Cooked Meat",
        "Cooked Morsel",
        "Cooked Fish",
        "Cooked Egg",
        "Bread",
        "Cornbread",
        "Fried Cactus Bit"
    }
    
    local autoheal
    local selectedFood
    
    Combat:CreateSlider('Selected Health For Auto Heal', {
        Min = 1,
        Max = 100,
        Default = 0
    }, function(value)
        autoheal = value
    end)

    local eatlist = {}
    for i, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
        if v:IsA("ImageLabel") and table.find(foodList, v.Name) then
            table.insert(eatlist, v.Name)
        end
    end
    
    Combat:CreateDropdown('Select Item For Auto Heal', eatlist, function(output)
        selectedFood = output
    end)

    getgenv().autohealonhealth = false
    Combat:CreateToggle("Auto Eat/Heal On Selected Health", function(bool)
        getgenv().autohealonhealth = bool
        if bool then
            spawn(function()
                while autohealonhealth do wait()
                    pcall(function()
                        pcall(function()
                            if game.Players.LocalPlayer.Character.Humanoid.Health < autoheal then
                                if selectedFood then
                                    for i, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                        if v:IsA("ImageLabel") then
                                            if v.Name == selectedFood then
                                                game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(i-1)
                                            end
                                        end
                                    end
                                end
                            end
                        end)
                    end)
                end
            end)
        end
    end)
        

    getgenv().autoeat = false
    Combat:CreateToggle("Auto Eat Selected Fruit | Warning!! Eat Only", function(bool)
        getgenv().autoeat = bool
        if bool then
            spawn(function()
                while autoeat do wait()
                    pcall(function()
                        spawn(function()
                            if selectedFood then
                                for i, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                    if v:IsA("ImageLabel") then
                                        if v.Name == selectedFood then
                                            game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(i-1)
                                        end
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            if selectedFood then
                                for i, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                    if v:IsA("ImageLabel") then
                                        if v.Name == selectedFood then
                                            game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(i-1)
                                        end
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            if selectedFood then
                                for i, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                    if v:IsA("ImageLabel") then
                                        if v.Name == selectedFood then
                                            game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(i-1)
                                        end
                                    end
                                end
                            end
                        end)
                        --[[spawn(function()
                            for i, v in pairs(getrenv()._G.data.inventory) do
                                if itemsData[v.name].nourishment then
                                    if v.name == selectedfruit1 or v.name == selectedfruit2 then
                                        game:GetService("ReplicatedStorage").Events.UseBagltem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            for i, v in pairs(getrenv()._G.data.inventory) do
                                if itemsData[v.name].nourishment then
                                    if v.name == selectedfruit1 or v.name == selectedfruit2 then
                                        game:GetService("ReplicatedStorage").Events.UseBagltem:FireServer(i)
                                    end
                                end
                            end
                        end)
                        spawn(function()
                            local slcfruits = {
                                selectedfruit1,
                                selectedfruit2
                            }
                            for i,v in pairs(slcfruits) do
                                game:GetService("ReplicatedStorage").Events.UseBagltem:FireServer(v)
                            end
                        end)]]
                    end)
                    wait()
                end
            end)
        end
    end)

--[[
    Combat:CreateBlankLabel("NOTE: You can choose from both dropdown")
    local eatlist = {
        "Bloodfruit",
        "Pumpkin",
        "Strangefruit",
        "Oddberry",
        "Lemon",
        "Apple",
        "Coconut",
        "Jelly",
        "Sunfruit",
        "Bluefruit",
        "Berry",
        "Orange",
        "Cloudberry",
        "Strawberry",
        "Banana",
        "Prickly Pear"
    }
    local selectedfruit1
    Combat:CreateDropdown('Select Item For Auto Heal - 1', eatlist, function(output)
        selectedfruit1 = output
    end)
    Combat:CreateBlankLabel("No food available = Maybe nothing's edible.")
    Combat:CreateBlankLabel("You can try re-executing. :)")
    local eatlist = {}
    --[[getgenv().itemsData = require(game:GetService("ReplicatedStorage").Modules.ItemData)
    for i, v in pairs(getrenv()._G.data.inventory) do
        if itemsData[v.name].nourishment then
            table.insert(eatlist,v.name)
        end
    end]--
    for i,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
        if v:IsA("ImageLabel") then
            table.insert(eatlist,v.name)
        end
    end
    local selectedfruit2
    Combat:CreateDropdown('Select Item For Auto Heal - 2', eatlist, function(output)
        selectedfruit2 = output
    end)
    local autoheal
    Combat:CreateSlider('Selected Health For Auto Heal', {
        Min = 1,
        Max = 100,
        Default = 0
    }, function(value)
        autoheal = value
    end)
    if game.PlaceId == 11729688377 then
        getgenv().NormalWorld = true
    elseif game.PlaceId == 11879754496 then
        getgenv().NormalWorld = false
    end
    getgenv().autohealonhealth = false
    Combat:CreateToggle("Auto Eat/Heal On Selected Health", function(bool)
        getgenv().autohealonhealth = bool
        if bool then
            spawn(function()
                while autohealonhealth do wait()
                    pcall(function()
                        if game.Players.LocalPlayer.Character.Humanoid.Health < autoheal then
                            spawn(function()
                                if getgenv().NormalWorld == true then
                                    for i, v in pairs(getrenv()._G.data.inventory) do
                                        if itemsData[v.name].nourishment then
                                            if v.name == selectedfruit1 or v.name == selectedfruit2 then
                                                game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(i)
                                            end
                                        end
                                    end
                                    --[[spawn(function()
                                        for i, v in pairs(getrenv()._G.data.inventory) do
                                            if itemsData[v.name].nourishment then
                                                if v.name == selectedfruit1 or v.name == selectedfruit2 then
                                                    game:GetService("ReplicatedStorage").Events.UseBagltem:FireServer(i)
                                                end
                                            end
                                        end
                                    end)--]--
                                elseif getgenv().NormalWorld == false then
                                    local slcfruits = {
                                        selectedfruit1,
                                        selectedfruit2
                                    }
                                    for i,v in pairs(slcfruits) do
                                        game:GetService("ReplicatedStorage").Events.UseBagltem:FireServer(v)
                                    end
                                end
                            end)
                        end
                    end)
                    wait()
                end
            end)
        end
    end)
    ]]
    
    
    Combat:CreateBlankLabel("")
    Combat:CreateBlankLabel("Starts Eating when ever enemy comes\nnear best for pvp fighting.")
    Combat:CreateBlankLabel("This slider is use to choose\nhow much near enemy must be to start healing.")
    Combat:CreateSlider('Nearest Enemy', {
        Min = 1,
        Max = 30,
        Default = 10
    }, function(value)
        getgenv().NearestEnemyHeal = value
    end)
    Combat:CreateBlankLabel("This select something to eat otherwise it won't work.")
    getgenv().PVPAutoHeal = false
    Combat:CreateToggle("Auto Eat When Enemy Is Near, Pvp Heal", function(bool)
        getgenv().PVPAutoHeal = bool
        if bool then
            spawn(function()
                while getgenv().PVPAutoHeal do wait()
                    pcall(function()
                        local Players = game:GetService("Players")
                        local LocalPlayer = Players.LocalPlayer
                        local HRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if HRP then
                            local nearRadius = getgenv().NearestEnemyHeal or 10
                            for _, player in pairs(Players:GetPlayers()) do
                                if player ~= LocalPlayer and player.Character then
                                    local enemyHRP = player.Character:FindFirstChild("HumanoidRootPart")
                                    if enemyHRP then
                                        if (HRP.Position - enemyHRP.Position).Magnitude < nearRadius then
                                            if selectedFood then
                                                for i, v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RightPanel.Inventory.List:GetChildren()) do
                                                    if v:IsA("ImageLabel") then
                                                        if v.Name == selectedFood then
                                                            game:GetService("ReplicatedStorage").Events.UseBagItem:FireServer(i-1)
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)

    Combat:CreateBlankLabel("")
    
    getgenv().autokillplayers = false
    Combat:CreateToggle("Auto Kill Players - Aura(Nearest)", function(bool)
        getgenv().autokillplayers = bool
        if bool then
            spawn(function()
                while autokillplayers do wait()
                    SlashAnimation()
                    wait(0.5)
                end
            end)
            spawn(function()
                while autokillplayers do wait()
                    pcall(function()
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = 30, nil
                            for i,v in pairs(Plrs:GetPlayers()) do
                                if v.Character:FindFirstChild("HumanoidRootPart") then
                                    if v ~= Plrs.LocalPlayer and v.Character.HumanoidRootPart then
                                        if (HRP.Position - v.Character.HumanoidRootPart.Position).Magnitude < nearr then
                                            near = v.Character.HumanoidRootPart
                                            nearr = (HRP.Position - v.Character.HumanoidRootPart.Position).Magnitude
                                        end
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            --[[
                            if v.Name == "Head" or 
                            v.Name == "LeftUpperArm" or 
                            v.Name == "LeftLowerLeg" or 
                            v.Name == "LeftFoot" or 
                            v.Name == "UpperTorso" or 
                            v.Name == "LeftLowerArm" or 
                            v.Name == "LowerTorso" or 
                            v.Name == "LeftUpperLeg" or 
                            v.Name == "GhostLeftArm" or 
                            v.Name == "LeftHand" or 
                            v.Name == "RightUpperArm" or 
                            v.Name == "RightLowerLeg" or 
                            v.Name == "RightFoot" or 
                            v.Name == "RightLowerArm" or 
                            v.Name == "RightUpperLeg" or 
                            v.Name == "GhostRightArm" or 
                            v.Name == "RightHand" or 
                            v.Name == "HumanoidRootPart" then
                            ]]
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                            end
                        end
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                        --game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                    end)
                end
            end)
        end
    end)
    
    
    getgenv().autohitboxexpand = false
    Combat:CreateToggle("Auto HitBox Expand(Chest)", function(bool)
        getgenv().autohitboxexpand = bool
        if bool then
            spawn(function()
                while autohitboxexpand do wait()
                    pcall(function()
                        _G.HeadSize = 10
                        for i,v in next, game:GetService('Players'):GetPlayers() do
                            if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                                pcall(function()
                                    v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                                    v.Character.HumanoidRootPart.Transparency = 0.7
                                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
                                    v.Character.HumanoidRootPart.Material = "Neon"
                                end)
                            end
                        end
                    end)
                end
            end)
        else
            wait(0.1)
            _G.HeadSize = 2
            for i,v in next, game:GetService('Players'):GetPlayers() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                        v.Character.HumanoidRootPart.Transparency = 1
                    end)
                end
            end
        end
    end)
    
    
    
    local Mixed = Window:CreateTab("LP/Mix")
    
    local SpeedBool
    local SpeedTable = {}
    Mixed:CreateToggle("Water Walkalker", function(bool)
        if bool then
            Speeder()
            return
        end
        SpeedBool = false
    end)
    function Speeder()
        speederup = 18
        spawn(function()
            SpeedBool = true
            function speedup()
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Humanoid then 
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speederup
                end
            end
            SpeedTable.WalkSpeedChanger = (SpeedTable.WalkSpeedChanger and SpeedTable.WalkSpeedChanger:Disconnect() and false) or game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"):Connect(speedup)
            SpeedTable.WalkSpeedAlawys = (SpeedTable.WalkSpeedAlawys and SpeedTable.WalkSpeedAlawys:Disconnect() and false) or game.Players.LocalPlayer.CharacterAdded:Connect(function()
                SpeedTable.WalkSpeedChanger = (SpeedTable.WalkSpeedChanger and SpeedTable.WalkSpeedChanger:Disconnect() and false) or game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"):Connect(speedup)
                speedup()
            end)
            speedup()
            while task.wait() do
                if not SpeedBool then
                    SpeedTable.WalkSpeedChanger = (SpeedTable.WalkSpeedChanger and SpeedTable.WalkSpeedChanger:Disconnect() and false) or nil
                    SpeedTable.WalkSpeedAlawys = (SpeedTable.WalkSpeedAlawys and SpeedTable.WalkSpeedAlawys:Disconnect() and false) or nil
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                    return
                end
            end
        end)
    end
    
    Mixed:CreateToggle("Better Zoom/Camera", function(bool)
        if bool then
            local LocalPlayer = game:GetService("Players").LocalPlayer
            LocalPlayer.CameraMaxZoomDistance = 9e9
            LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
        else
            local LocalPlayer = game:GetService("Players").LocalPlayer
            LocalPlayer.CameraMaxZoomDistance = 400
            LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Zoom
        end
    end)
    
    getgenv().betterclimber = false
    Mixed:CreateToggle("Better Mountain Climber", function(bool)
        getgenv().betterclimber = bool
        if bool then
            spawn(function()
                while betterclimber do wait()
                    pcall(function()
                        game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90
                    end)
                    wait(1)
                end
            end)
        else
            wait()
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
        end
    end)
    game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
    
    
    
    Mixed:CreateButton("Teleport To Normal World", function()
        game:GetService("TeleportService"):Teleport(11729688377, game.Players.LocalPlayer)
    end)
    
    Mixed:CreateButton("Teleport To Void", function()
        game:GetService("TeleportService"):Teleport(11879754496, game.Players.LocalPlayer)
    end)
    
    Mixed:CreateButton("Less Player Server Hop", function()
        local PlaceID = game.PlaceId
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        local File = pcall(function()
            AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
        end)
        if not File then
            table.insert(AllIDs, actualHour)
            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
        end
        function TPReturner()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for i,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                            end
                        else
                            if tonumber(actualHour) ~= tonumber(Existing) then
                                local delFile = pcall(function()
                                    delfile("NotSameServers.json")
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end)
                            end
                        end
                        num = num + 1
                    end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end
    
        function Teleport()
            while wait() do
                pcall(function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end)
            end
        end
        print("Teleporting To New Server")
        Teleport()
    end)
    
    local Players = game:GetService("Players")
    local mouse = game:GetService("Players").LocalPlayer:GetMouse()
    FLYING = false
    iyflyspeed = 0.25
    vehicleflyspeed = 0.25
    function sFLY(vfly)
        repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character.HumanoidRootPart and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        repeat wait() until mouse
        if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
    
        local T = Players.LocalPlayer.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0
    
        local function FLY()
            FLYING = true
            local BG = Instance.new('BodyGyro')
            local BV = Instance.new('BodyVelocity')
            BG.P = 9e4
            BG.Parent = T
            BV.Parent = T
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            task.spawn(function()
                repeat wait()
                    if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                        Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                    end
                    if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                        SPEED = 50
                    elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                        SPEED = 0
                    end
                    if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                        lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                    elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    else
                        BV.velocity = Vector3.new(0, 0, 0)
                    end
                    BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not FLYING
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                BG:Destroy()
                BV:Destroy()
                if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                    Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
                end
            end)
        end
        flyKeyDown = mouse.KeyDown:Connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 's' then
                CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 'a' then
                CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 'd' then 
                CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
            elseif QEfly and KEY:lower() == 'e' then
                CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
            elseif QEfly and KEY:lower() == 'q' then
                CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
            end
            pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
        end)
        flyKeyUp = mouse.KeyUp:Connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            elseif KEY:lower() == 'e' then
                CONTROL.Q = 0
            elseif KEY:lower() == 'q' then
                CONTROL.E = 0
            end
        end)
        FLY()
    end
    
    function NOFLY()
        FLYING = false
        if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
        if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
            Players.LocalPlayer.Character.Humanoid.PlatformStand = false
        end
        pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
    end
    
    Mixed:CreateToggle("Fly - V3rmillion.net(Patched)", function(bool)
        --[[if bool then
            sFLY(true)
        else
            NOFLY()
            wait()
            NOFLY()
        end]]
    end)
    
    Mixed:CreateButton("Infinity Jump - V3rmillion.net", function()
        local Player = game:GetService'Players'.LocalPlayer;
        local UIS = game:GetService'UserInputService';
        _G.JumpHeight = 50;
        function Action(Object, Function) if Object ~= nil then Function(Object); end end
        UIS.InputBegan:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
                Action(Player.Character.Humanoid, function(self)
                    if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                        Action(self.Parent.HumanoidRootPart, function(self)
                            self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                        end)
                    end
                end)
            end
        end)
    end)
    
    Mixed:CreateButton("Remove Water", function()
        local Terrain = workspace.Terrain
        local processBlockSize = 640
        local WATER = Enum.Material.Water
        local AIR = Enum.Material.Air
        local floor = math.floor
        function isInRegion3(region, point)
            --function by buildthomas
            --https://devforum.roblox.com/t/see-if-vector3-is-in-region3/118457/7
            local relative = (point - region.CFrame.p) / region.Size
            return -0.5 <= relative.X and relative.X <= 0.5
            and -0.5 <= relative.Y and relative.Y <= 0.5
            and -0.5 <= relative.Z and relative.Z <= 0.5
        end
        local function round(num)
            return math.floor(num + .5)
        end
        local function getAlignedPosition(pos)
            --Function from https://wiki.roblox.com/index.php?title=Smooth_terrain#Flood_Fill
            local x = round(pos.X)
            x = x - x%4 + 2
            local y = round(pos.Y)
            y = y - y%4 + 2
            local z = round(pos.Z)
            z = z - z%4 + 2
            
            return Vector3.new(x,y,z)
        end
        local function comma_value(n) --http://lua-users.org/wiki/FormattingNumbers
            local left,num,right = string.match(n,'^([^%d]*%d)(%d*)(.-)$')
            return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
        end
        local function removeWater(voxelPos, worldSize)
            local functionStart = tick()
            voxelPos = getAlignedPosition(voxelPos)
            local material = nil
            local occupancy = nil
            local boundaryRegion = Region3.new(voxelPos-worldSize/2, voxelPos+worldSize/2)
            boundaryRegion:ExpandToGrid(4)
            local minPoint = boundaryRegion.CFrame.p-boundaryRegion.Size/2
            print("Starting")
            local partsProcessed = 0
            local regions = {} --Stores all of the regions to read/write to
            local start = getAlignedPosition(minPoint)
            local xOffset = 0
            local yOffset = 0
            local zOffset = 0
            local done = false
            repeat
                local startPos = start+Vector3.new(xOffset,yOffset,zOffset)
                local size = boundaryRegion.CFrame.p+boundaryRegion.Size/2-startPos
                local x,y,z = size.X, size.Y, size.Z
                if x > processBlockSize then
                    x = processBlockSize
                end
                if y > processBlockSize then
                    y = processBlockSize
                end
                if z > processBlockSize then
                    z = processBlockSize
                end
                size = Vector3.new(x,y,z)
                local region = Region3.new(startPos, startPos+size)
                region = region:ExpandToGrid(4)
                table.insert(regions, region)
                zOffset = zOffset + processBlockSize
                if zOffset >= boundaryRegion.Size.Z then
                    zOffset = 0
                    yOffset = yOffset + processBlockSize
                end
                if yOffset >= boundaryRegion.Size.Y then
                    yOffset = 0
                    xOffset = xOffset + processBlockSize
                end
                if xOffset >= boundaryRegion.Size.X then
                    done = true
                end
            until done
            print("Writing to ", #regions, " regions!")
            print("Removing water...")
            local totalRemoved = 0
            local totalProcessed = 0
            local totalVolume = worldSize.X*worldSize.Y*worldSize.Z
            local changed,materials,occupancy,size,matsX,occX,matsY,occY,p
            for index, region in pairs(regions) do
                --[[
                --Uncomment this if you want parts to display where each chunk is
                p = Instance.new("Part")
                p.Anchored = true
                p.CanCollide = false
                p.Transparency = 0.9
                --p.BrickColor = BrickColor.new(index%255)
                p.Parent = workspace
                p.Size = region.Size
                p.CFrame = region.CFrame
                ]]
                changed = 0
                materials, occupancy = Terrain:ReadVoxels(region, 4)
                size = materials.Size
                for x = 1, size.X do
                    matsX = materials[x] --Creating variables to reduce amount of searching
                    occX = occupancy[x]
                    for y = 1, size.Y do
                        matsY = matsX[y]
                        occY = occX[y]
                        for z = 1, size.Z do
                            totalProcessed = totalProcessed + 1
                            if matsY[z] == WATER then
                                matsY[z] = AIR
                                occY[z] = 0
                                changed = changed + 1
                            end
                        end
                    end
                    --[[
                    --Use this and comment out the wait below if you want constant progress updates
                    if x%10 == 0 then
                        print((floor((index-1+x/size.X)/#regions*1000+0.5)/10).."% complete!")
                        wait(0)
                    end
                    ]]
                end
                if changed > 0 then --No need to write if there is no changes
                    Terrain:WriteVoxels(region, 4, materials, occupancy)
                end
                --Comment the following block out if you use the above wait ability.
                if index%4 == 0 then
                    print((floor(index/#regions*1000+0.5)/10).."% complete!")
                    wait(0)
                end
                totalRemoved = totalRemoved + changed
            end
            print("Total time elapsed: ", (tick()-functionStart), " seconds!")
            print("Total water blocks removed: ", totalRemoved)
            print("Total cells processed: ", comma_value(totalProcessed))
            print("Region/Chunks: ", #regions)
            print("Total Volume: ", totalVolume, "cubic studs")
            print("Done processing")
        end
        --Use this function as pass it the origin the removing should take place, and the size
        --of the area to check for water.
        --removeWater(origin, size)
        removeWater(Vector3.new(0,0,0), Vector3.new(5000,30,5000))
    end)
    
    local connection
    Mixed:CreateToggle("Press (F) To Teleport", function(bool)
        if bool then
            connection = game:GetService("UserInputService").InputBegan:Connect(function(bool)
                if bool.KeyCode == Enum.KeyCode.F then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer:GetMouse().Hit.p)
                end
            end)
            return
        end
        connection:Disconnect()
    end)
    
    getgenv().hidetext = false
    Mixed:CreateToggle("Hide Text: Useful while recording", function(bool)
        getgenv().hidetext = bool
        local LP = game.Players.LocalPlayer
        for i,v in pairs(game:GetDescendants()) do
            if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
                if v.Text:find(LP.Name) or v.Text:find(LP.UserId) then
                    print(v:GetFullName())
                end
            end
        end
        pcall(function()
            game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Panels.Topbar.CoinsText.Text = "69"
            game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Panels.Topbar.CoinsText:GetPropertyChangedSignal("Text"):Connect(function()
                game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Panels.Topbar.CoinsText.Text = "69"
            end)
        end)
        pcall(function()
            if getgenv().hidetext == true then
            else
                while wait() do
                    pcall(function()
                        game:GetService("Players").LocalPlayer.PlayerGui.SecondaryGui.Enabled = false
                    end)
                end
            end
            getgenv().hidetext = true  
        end)
    end)
    
    local FullBrightBool
    Mixed:CreateToggle("FullBright", function(bool)
        if FullBrightBool then
            FullBrightBool = false
            return
        end
        FullBright()  
    end)
    
    function FullBright()
        FullBrightBool = true
        spawn(function()
            while task.wait() do
                if not FullBrightBool then
                    local Lighting = game:GetService("Lighting")
                    local Rep = game:GetService("ReplicatedStorage")
                    Lighting.Brightness = 3
                    Lighting.ClockTime = 14
                    Lighting.FogEnd = 1000
                    Lighting.GlobalShadows = true
                    Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
                    if Lighting.Shine then 
                        Lighting.Shine:Destroy()
                    end
                    return
                end
                local Lighting = game:GetService("Lighting")
                local Rep = game:GetService("ReplicatedStorage")
                Lighting.Brightness = 2
                Lighting.ClockTime = 14
                Lighting.FogEnd = 100000
                Lighting.GlobalShadows = false
                Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
                if Lighting:FindFirstChild("Rain") then
                    Lighting:FindFirstChild("Rain"):Destroy()
                end
                if Lighting:FindFirstChild("Doom") then 
                    Lighting:FindFirstChild("Doom"):Destroy()
                end
                if not Lighting:FindFirstChild("Shine") then
                    local shine = Rep.Skies.Shine:Clone()
                    shine.Parent = Lighting
                end
                if workspace:FindFirstChild("RainPart") then 
                    workspace:FindFirstChild("RainPart"):Destroy()
                end
            end
        end)
    end
    
--[[    
    local HRCC = game.Players.LocalPlayer.Character.HumanoidRootPart
    HRCC.CFrame = HRCC.CFrame + Vector3.new(0,400,0)
    ]]


    local mainTp = Window:CreateTab("Main/Farm")
    
    mainTp:CreateBlankLabel("Most of the features is patched already.")
    mainTp:CreateBlankLabel("Removed patched features so you wont get ban :)")
    mainTp:CreateBlankLabel("")
    mainTp:CreateBlankLabel("Use Camera Lock Remover Before Using Teleport")
    getgenv().CamLock = false
    mainTp:CreateToggle("Camera Lock Remover", function(bool)
        getgenv().CamLock = bool
        if bool then
            spawn(function()
                    while CamLock do wait()
                    pcall(function()
                        local args = {[1] = "camLock",[2] = false}
                        game:GetService("ReplicatedStorage").Events.ChangeSetting:InvokeServer(unpack(args))
                    end)
                    wait(0.5)
                end
            end)
        end
    end)
    
    --[[mainTp:CreateButton("Teleport Near Old God, Chance: 20%", function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(225.83612060546875, -125.41963195800781, 1084.415771484375)
        wait(0.05)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(225.83612060546875, -125.41963195800781, 1084.415771484375)
    end)]]
    
    --[[mainTp:CreateButton("Teleport Near Hateful God, Chance: 20%", function()
        --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1063.0650634765625, -185.97500610351562, -429.73388671875)
        --wait(0.05)
        --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1063.0650634765625, -185.97500610351562, -429.73388671875)
        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
        game.Players.LocalPlayer.Character.Humanoid.Jump = true
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").TpBack.TopOfWhiteAntArea.CFrame * CFrame.new(0,3,0)
        wait(0.05)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").TpBack.TopOfWhiteAntArea.CFrame * CFrame.new(0,2,0)
        game.Players.LocalPlayer.Character.Humanoid.Jump = true
    end)]]

    --mainTp:CreateBlankLabel("")

    --mainTp:CreateBlankLabel("Make Sure there is Ancient Tree Before \n Clicking Teleport Ancient Tree")

    --getgenv().ScriptRunningTP50 = false
    mainTp:CreateButton("Teleport Ancient Tree, Chance: 90% (Patched)", function()
        --[[if getgenv().ScriptRunningTP50 == true then
            print("Bruh Dont Click It Twice")
        else
            getgenv().ScriptRunningTP50 = true
            Speeder()
            local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
            game.Players.LocalPlayer.Character.Humanoid.Jump = true
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").TpBack.TopOfWhiteAntArea.CFrame * CFrame.new(0,3,0)
            wait(0.05)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").TpBack.TopOfWhiteAntArea.CFrame * CFrame.new(0,2,0)
            game.Players.LocalPlayer.Character.Humanoid.Jump = true
            wait(1)
            game.Players.LocalPlayer.Character.Humanoid.Jump = true
            repeat wait() game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90 
            game.Players.LocalPlayer.Character.Humanoid.Jump = true 
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-551.7807006835938, -7.080601215362549, -1203.8973388671875)) until 
            (HRP.Position - Vector3.new(-551.7807006835938, -7.080601215362549, -1203.8973388671875)).Magnitude < 1
            HRP.CFrame = HRP.CFrame * CFrame.new(0,350,0)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            SpeedBool = false
            getgenv().ScriptRunningTP50 = false
        end]]
    end)

    --[[getgenv().ScriptRunningWalk = false
    mainTp:CreateButton("Teleport Ancient Tree(Walk), Chance: 95%", function()
        if getgenv().ScriptRunningWalk == true then
            print("Bruh Dont Click It Twice")
        else
            getgenv().ScriptRunningWalk = true
            Speeder()
            local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
            repeat wait() game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90 
            game.Players.LocalPlayer.Character.Humanoid.Jump = true 
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-551.7807006835938, -7.080601215362549, -1203.8973388671875)) until 
            (HRP.Position - Vector3.new(-551.7807006835938, -7.080601215362549, -1203.8973388671875)).Magnitude < 1
            wait(0.5)
            HRP.CFrame = HRP.CFrame * CFrame.new(0,350,0)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            SpeedBool = false
            getgenv().ScriptRunningWalk = false
            --[getgenv().ScriptRunningWalk = true
            local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
            if (HRP.Position - Vector3.new(-551.7807006835938, -7.080601215362549, -1203.8973388671875)).Magnitude < 1 then
                HRP.CFrame = HRP.CFrame * CFrame.new(0,350,0)
                game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
                wait(0.1)
                game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
                wait(0.1)
                game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-548.3360595703125, 312.9124755859375, -1204.9423828125))
            else
                game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-551.7807006835938, -7.080601215362549, -1203.8973388671875))
            --[end
        end
    end)]]

    mainTp:CreateButton("Crystal Bridge (Patched)", function()
        if game:GetService("Workspace").CrystalBridge.Transparency == 1 then
            game:GetService("Workspace").CrystalBridge.CanCollide = true
            game:GetService("Workspace").CrystalBridge.Transparency = 0
        else 
            game:GetService("Workspace").CrystalBridge.CanCollide = false
            game:GetService("Workspace").CrystalBridge.Transparency = 1
        end
    end)

    
    local Players = game:GetService("Players")
    local mouse = game:GetService("Players").LocalPlayer:GetMouse()
    FLYING = false
    iyflyspeed = 0.25
    vehicleflyspeed = 0.25
    function TPBypass(vfly)
        repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character.HumanoidRootPart and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        repeat wait() until mouse
        if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
    
        local T = Players.LocalPlayer.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0
    
        local function FLY()
            FLYING = true
            local BG = Instance.new('BodyGyro')
            local BV = Instance.new('BodyVelocity')
            BG.P = 9e4
            BG.Parent = T
            BV.Parent = T
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            task.spawn(function()
                repeat wait()
                    if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                        Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                    end
                    if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                        SPEED = 50
                    elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                        SPEED = 0
                    end
                    if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                        lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                    elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    else
                        BV.velocity = Vector3.new(0, 0, 0)
                    end
                    BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not FLYING
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                BG:Destroy()
                BV:Destroy()
                if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                    Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
                end
            end)
        end
        flyKeyDown = mouse.KeyDown:Connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 's' then
                CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 'a' then
                CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
            elseif KEY:lower() == 'd' then 
                CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
            elseif QEfly and KEY:lower() == 'e' then
                CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
            elseif QEfly and KEY:lower() == 'q' then
                CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
            end
            pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
        end)
        flyKeyUp = mouse.KeyUp:Connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            elseif KEY:lower() == 'e' then
                CONTROL.Q = 0
            elseif KEY:lower() == 'q' then
                CONTROL.E = 0
            end
        end)
        FLY()
    end
    
    function BypassNOFLY()
        FLYING = false
        if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
        if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
            Players.LocalPlayer.Character.Humanoid.PlatformStand = false
        end
        pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
    end
    
    mainTp:CreateButton("Stop TP", function()
        local Plrs = game:GetService("Players")
        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
        local CFrameEnd = HRP.CFrame
        local tpspeed = 1000
        local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
        tween:Play()
        wait(0.05)
        tween:Play()
        wait(0.05)
        tween:Play()
    end)

    mainTp:CreateBlankLabel("Necessary to turn on Auto Pick/Break for 4 gold farm")

    getgenv().autopickforthismf = false
    mainTp:CreateToggle("Auto PickUp Essence, Gold, RawGold", function(bool)
    getgenv().autopickforthismf = bool
        if bool then
            spawn(function()
                while autopickforthismf do wait()
                    pcall(function()
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Raw Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Raw Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") and v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                if v.Name == "Gold" then
                                    if (HRP.Position - v.Position).Magnitude < 50 then
                                        game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                    end
                                end
                            end
                        end
                        local HRP = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        local RepS = game:GetService("ReplicatedStorage")
                        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v:FindFirstChild("Pickup") then
                                if v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                    if v.Name == "Essence" then
                                        if (HRP.Position - v.Position).Magnitude < 50 then
                                            game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                        end
                                    end
                                end
                            end
                        end
                        for i,v in pairs(game:GetService("Workspace").Items:GetChildren()) do
                            if v:FindFirstChild("Pickup") then
                                if v:IsA("BasePart") or v:IsA("UnionOpreation") then
                                    if v.Name == "Essence" then
                                        if (HRP.Position - v.Position).Magnitude < 50 then
                                            game:GetService("ReplicatedStorage").Events.Pickup:FireServer(v)
                                        end
                                    end
                                end
                            end
                        end
                    end)
                end
            end)
        end
    end)

    getgenv().camlockremoves = false
    mainTp:CreateToggle("Camera Lock Remover", function(bool)
    getgenv().camlockremoves = bool
        if bool then
            spawn(function()
                while camlockremoves do wait(0.5)
                    pcall(function()
                        local args = {[1] = "camLock",[2] = false}
                        game:GetService("ReplicatedStorage").Events.ChangeSetting:InvokeServer(unpack(args))
                    end)
                end
            end)
        end
    end)
    

    getgenv().autofarmitems1auramain1 = false
    mainTp:CreateToggle("Auto Break Items 1", function(bool)
    getgenv().autofarmitems1auramain1 = bool
        spawn(function()
            if bool then
                spawn(function()
                    while autofarmitems1auramain1 do wait()
                        SlashAnimation()
                        wait(0.5)
                    end
                end)
                spawn(function()
                    while autofarmitems1auramain1 do wait()
                        pcall(function()
                            local Plrs = game:GetService("Players")
                            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                            local wrkspc = game:GetService("Workspace")
                            local RepS = game:GetService("ReplicatedStorage")
                            function getNear()
                                local near  
                                local nearr = 100, nil
                                for a,b in pairs(wrkspc:GetChildren()) do
                                    for i,v in pairs(b:GetChildren()) do
                                        if v:IsA("BasePart") then
                                            if not v.Parent:FindFirstChild("Humanoid") and v.Parent:FindFirstChild("Health") then
                                                if (HRP.Position - v.Position).Magnitude < nearr then
                                                    near = v
                                                    nearr = (HRP.Position - v.Position).Magnitude
                                                end
                                            end
                                        end
                                    end
                                end
                                return near
                            end
                            local nearest = getNear()
                            local GetAllPart = {}
                            for i,v in pairs(nearest.Parent:GetChildren()) do
                                if v:IsA("BasePart") then
                                    table.insert(GetAllPart,v)
                                end
                            end
                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                            --game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                        end)
                    end
                end)
            end
        end)
    end)

    
    getgenv().autofarmitems1auramain2 = false
    mainTp:CreateToggle("Auto Break Items 1", function(bool)
    getgenv().autofarmitems1auramain2 = bool
        spawn(function()
            if bool then
                spawn(function()
                    while autofarmitems1auramain2 do wait()
                        SlashAnimation()
                        wait(0.5)
                    end
                end)
                spawn(function()
                    while autofarmitems1auramain2 do wait()
                        pcall(function()
                            local Plrs = game:GetService("Players")
                            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                            local wrkspc = game:GetService("Workspace")
                            local RepS = game:GetService("ReplicatedStorage")
                            function getNear()
                                local near  
                                local nearr = 10, nil
                                for a,b in pairs(wrkspc.Resources:GetChildren()) do
                                    for i,v in pairs(b:GetChildren()) do
                                        if v:IsA("BasePart") then
                                            if not v.Parent:FindFirstChild("Humanoid") and v.Parent:FindFirstChild("Health") then
                                                if (HRP.Position - v.Position).Magnitude < nearr then
                                                    near = v
                                                    nearr = (HRP.Position - v.Position).Magnitude
                                                end
                                            end
                                        end
                                    end
                                end
                                return near
                            end
                            local nearest = getNear()
                            local GetAllPart = {}
                            for i,v in pairs(nearest.Parent:GetChildren()) do
                                if v:IsA("BasePart") then
                                    table.insert(GetAllPart,v)
                                end
                            end
                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                            --game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                        end)
                    end
                end)
            end
        end)
    end)

    getgenv().autofarm4goldwg = false    
    mainTp:CreateToggle("Auto Farm 4 Gold/Wealthy God - AntiKick(OP)", function(bool)
        getgenv().autofarm4goldwg = bool
        if bool then
        else
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
        end
        if bool then
            spawn(function()
                while autofarm4goldwg do wait()
                    pcall(function()
                        game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90
                    end)
                    wait(1)
                end
            end)
        else
            wait()
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
        end
        if bool then
            spawn(function()
                while autofarm4goldwg do wait()
                    SlashAnimation()
                    wait(0.5)
                end
            end)
            spawn(function()
                while autofarm4goldwg do wait()
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local near  
                        local near1
                        local near2
                        local near3
                        local near4
                        local near5
                        local nearr = math.huge, nil
                        for i, v in pairs(game:GetService("Workspace").Resources:GetChildren()) do
                            if v.Name == "Wealthy God" and v:FindFirstChild("Totem") then
                                if (HRP.Position - v:FindFirstChild("Totem").Position).Magnitude < nearr then
                                    near4 = v:FindFirstChild("Totem")
                                end
                            end
                            if v:IsA('Model') and v.Name == "Ice Chunk" and v:FindFirstChild("Breakaway") then 
                                if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Reference.Position).Magnitude < 50 then
                                    if (HRP.Position - v.Reference.Position).Magnitude < nearr then
                                        near1 = v.Reference
                                    end
                                end        
                            end
                            if v:IsA('Model') and v.Name == "Ice Chunk" and v:FindFirstChild("Breakaway") and v.Breakaway:FindFirstChild("Gold Node") then 
                                if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Breakaway["Gold Node"].Reference.Position).Magnitude < 50 then
                                    if (HRP.Position - v.Breakaway["Gold Node"].Reference.Position).Magnitude < nearr then
                                        near2 = v.Breakaway["Gold Node"].Reference
                                    end
                                end        
                            end
                            if v:IsA('Model') and v.Name == "Gold Node" and v:FindFirstChildWhichIsA("BasePart") then
                                if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                    if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 50 then
                                        near3 = v:FindFirstChildWhichIsA("BasePart")
                                    end
                                end
                            end
                            --if v.Name == "White Ant Mound" then
                            --    if (Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375) - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 100 then
                            --        if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 100 then
                            --            near3 = v.Union
                            --        end
                            --    end
                            --end
                        end
                        local a = {
                            near1,
                            near2,
                            near3,
                            near4
                            --near5
                        }
                        function getlowest()
                            local low = {}
                            for i,v in pairs(a) do
                                if ((HRP.Position - v.Position).Magnitude) < nearr then
                                    table.insert(low,((HRP.Position - v.Position).Magnitude))
                                    table.sort(low, function(i,v) return i < v end)
                                end
                            end
                            for i,v in pairs(a) do
                                if ((HRP.Position - v.Position).Magnitude) then
                                    if low[1] == ((HRP.Position - v.Position).Magnitude) then
                                        return v
                                    end
                                end
                            end    
                        end
                        local nearest = getlowest()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                    table.insert(GetAllPart,v)
                                    if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                        if nearest.Parent.Name:find("Wealthy God") then
                                            local args = {[1] = game.ReplicatedStorage.RelativeTime.Value,[2] = {[1] = workspace:FindFirstChild("Wealthy God").Totem}}
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(workspace:FindFirstChild("Wealthy God").Totem)
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(unpack(args))
                                        else
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                                        end
                                    end
                                end
                            end
                        end
                        if (HRP.Position - nearest.Position).Magnitude < 20 then
                        else
                            game.Players.LocalPlayer.Character.Humanoid.Jump = true
                        end
                        --for i,v in pairs(game.workspace:GetChildren()) do
                        --    if v.Name == "Wealthy God" and v:FindFirstChild("Totem") then
                        --        if nearest.Name == "Totem" then
                        --            print("ASS")
                        --            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375))
                        --        return
                        --        end
                        --    else
                        --        if nearest.Name == "Union" then
                        --            print("ASS2")
                        --            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375))
                        --        return
                        --        end
                        --    end
                        --end
                        if nearest.Name == "Totem" then
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375))
                        return
                        end
                        game.Players.LocalPlayer.Character.Humanoid:MoveTo(nearest.Position)
                        wait()
                    end)
                    wait()
                end
            end)
        end
    end)


    getgenv().autofarm4gold = false    
    mainTp:CreateToggle("Auto Farm 4 Gold - AntiKick(OP)", function(bool)
        getgenv().autofarm4gold = bool
        if bool then
        else
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
        end
        if bool then
            spawn(function()
                while autofarm4gold do wait()
                    pcall(function()
                        game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90
                    end)
                    wait(0.5)
                end
            end)
        else
            wait()
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
        end
        if bool then
            spawn(function()
                while autofarm4gold do wait()
                    --[[pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local near  
                        local near1
                        local near2
                        local near3
                        local near4
                        local near5
                        local nearr = math.huge, nil
                        for i,v in pairs(game.workspace:GetChildren()) do
                            if v.Name == "Wealthy God" and v:FindFirstChild("Totem") then
                                if (HRP.Position - v:FindFirstChild("Totem").Position).Magnitude < nearr then
                                    near4 = v:FindFirstChild("Totem")
                                end
                            end
                            if v:IsA('Model') and v.Name == "Ice Chunk" and v:FindFirstChild("Breakaway") then 
                                if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Reference.Position).Magnitude < 50 then
                                    if (HRP.Position - v.Reference.Position).Magnitude < nearr then
                                        near1 = v.Reference
                                    end
                                end        
                            end
                            if v:IsA('Model') and v.Name == "Ice Chunk" and v:FindFirstChild("Breakaway") and v.Breakaway:FindFirstChild("Gold Node") then 
                                if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Breakaway["Gold Node"].Reference.Position).Magnitude < 50 then
                                    if (HRP.Position - v.Breakaway["Gold Node"].Reference.Position).Magnitude < nearr then
                                        near2 = v.Breakaway["Gold Node"].Reference
                                    end
                                end        
                            end
                            if v:IsA('Model') and v.Name == "Gold Node" and v:FindFirstChildWhichIsA("BasePart") then
                                if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                    if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 50 then
                                        near3 = v:FindFirstChildWhichIsA("BasePart")
                                    end
                                end
                            end
                            --if v.Name == "White Ant Mound" then
                            --    if (Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375) - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 100 then
                            --        if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 100 then
                            --            near3 = v.Union
                            --        end
                            --    end
                            --end
                        end
                        local a = {
                            near1,
                            near2,
                            near3,
                            near4
                            --near5
                        }
                        function getlowest()
                            local low = {}
                            for i,v in pairs(a) do
                                if ((HRP.Position - v.Position).Magnitude) < nearr then
                                    table.insert(low,((HRP.Position - v.Position).Magnitude))
                                    table.sort(low, function(i,v) return i < v end)
                                end
                            end
                            for i,v in pairs(a) do
                                if ((HRP.Position - v.Position).Magnitude) then
                                    if low[1] == ((HRP.Position - v.Position).Magnitude) then
                                        return v
                                    end
                                end
                            end    
                        end
                        local nearest = getlowest()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                    table.insert(GetAllPart,v)
                                    if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                        if nearest.Parent.Name:find("Wealthy God") then
                                            local args = {[1] = game.ReplicatedStorage.RelativeTime.Value,[2] = {[1] = workspace:FindFirstChild("Wealthy God").Totem}}
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(unpack(args))
                                        else
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                                        end
                                    end
                                end
                            end
                        end
                        if (HRP.Position - nearest.Position).Magnitude < 20 then
                        else
                            game.Players.LocalPlayer.Character.Humanoid.Jump = true
                        end
                        --for i,v in pairs(game.workspace:GetChildren()) do
                        --    if v.Name == "Wealthy God" and v:FindFirstChild("Totem") then
                        --        if nearest.Name == "Totem" then
                        --            print("ASS")
                        --            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375))
                        --        return
                        --        end
                        --    else
                        --        if nearest.Name == "Union" then
                        --            print("ASS2")
                        --            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375))
                        --        return
                        --        end
                        --    end
                        --end
                        if nearest.Name == "Totem" then
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(417.03900146484375, 16.74881935119629, -1834.792724609375))
                        return
                        end
                        game.Players.LocalPlayer.Character.Humanoid:MoveTo(nearest.Position)
                        wait()
                    end)]]
                    pcall(function()
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local nearr = math.huge
                        local nearestGoldNodePosition = nil
                        local nearestGoldNodePosition1 = nil
                        local targetPosition = nil

                        local targetPosition1 = Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125)

                        if (targetPosition1 - HRP.Position).Magnitude > 100 then
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetPosition1)
                        end

                        for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                            if v.Name == "Gold Node" and v:FindFirstChildWhichIsA("BasePart") then
                                if (targetPosition1 - v:FindFirstChild("Gold Node").Position).Magnitude < 50 then
                                    if (HRP.Position - v:FindFirstChild("Gold Node").Position).Magnitude < 50 then
                                        local distanceToGoldNode1 = (HRP.Position - v:FindFirstChild("Gold Node").Position).Magnitude
                                        if distanceToGoldNode1 < nearr then
                                            nearr = distanceToGoldNode1
                                            nearestGoldNodePosition1 = v:FindFirstChild("Gold Node").Position
                                        end
                                    end
                                end
                            end
                        end

                        for i, v in pairs(game:GetService("Workspace").Resources:GetChildren()) do
                            if v.Name == "Ice Chunk" then
                                if v:FindFirstChild("Breakaway") then
                                    if v.Breakaway:FindFirstChild("Gold Node") then
                                        local bk = v.Breakaway["Gold Node"]:FindFirstChildWhichIsA("BasePart")
                                        if (targetPosition1 - bk.Position).Magnitude < 50 then
                                            local distanceToGoldNode = (HRP.Position - bk.Position).Magnitude
                                            if distanceToGoldNode < nearr then
                                                nearr = distanceToGoldNode
                                                nearestGoldNodePosition = bk.Position
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        if nearestGoldNodePosition1 then
                            targetPosition = nearestGoldNodePosition1
                        end
                        if nearestGoldNodePosition then
                            targetPosition = nearestGoldNodePosition
                        end
                        if targetPosition then
                            game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetPosition)
                        else
                            --print("No valid target position found.")
                        end
                        if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - HRP.Position).Magnitude > 50 then
                            game.Players.LocalPlayer.Character.Humanoid.Jump = true
                        end
                        --[[
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        local nearr = math.huge, nil
                        for i,v in pairs(game:GetService("Workspace").Resources:GetChildren()) do
                            if v.Name == "Ice Chunk" then
                                if v:FindFirstChild("Breakaway") then
                                    if v.Breakaway:FindFirstChild("Gold Node") then
                                        if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Reference.Position).Magnitude < 50 then
                                            if (HRP.Position - v.Reference.Position).Magnitude < nearr then
                                                game.Players.LocalPlayer.Character.Humanoid:MoveTo(v.Breakaway["Gold Node"]:FindFirstChildWhichIsA("BasePart").Position)
                                            end
                                        end
                                    end
                                end        
                            end]]
                        wait()
                    end)
                end
            end)
        end
    end)
    game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
    
    --[[
    getgenv().autofarm4gold = false    
    mainTp:CreateToggle("Auto Farm 4 Gold", function(bool)
        getgenv().autofarm4gold = bool
        if bool then
        else
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
        end
        if bool then
            spawn(function()
                while autofarm4gold do wait()
                    pcall(function()
                        game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 90
                    end)
                    wait(1)
                end
            end)
        else
            wait()
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
        end
        if bool then
            spawn(function()
                while autofarm4gold do wait()
                    pcall(function()    
                        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
                        function getNear()
                            local near  
                            local nearr = math.huge, nil
                            for i,v in pairs(game.workspace:GetChildren()) do
                                if v:IsA('Model') and v.Name == "Ice Chunk" and v:FindFirstChild("Breakaway") then 
                                    if (HRP.Position - v.Reference.Position).Magnitude < nearr then
                                        if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Reference.Position).Magnitude < 50 then
                                            near = v.Reference
                                        end
                                    end        
                                end
                                if v:IsA('Model') and v.Name == "Ice Chunk" and v:FindFirstChild("Breakaway") and v.Breakaway:FindFirstChild("Gold Node") then 
                                    if (HRP.Position - v.Breakaway["Gold Node"].Reference.Position).Magnitude < nearr then
                                        if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v.Breakaway["Gold Node"].Reference.Position).Magnitude < 50 then
                                            near = v.Breakaway["Gold Node"].Reference
                                        end
                                    end        
                                end
                                if v:IsA('Model') and v.Name == "Gold Node" and v:FindFirstChildWhichIsA("BasePart") then
                                    if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                        if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < 50 then
                                            near = v:FindFirstChildWhichIsA("BasePart")
                                        end
                                    end
                                end
                                if v.Name == "Wealthy God" and v:FindFirstChild("Totem") then
                                    if (HRP.Position - v:FindFirstChild("Totem").Position).Magnitude < nearr then
                                        if (Vector3.new(939.063232421875, -2.192843198776245, -1406.0303955078125) - v:FindFirstChild("Totem").Position).Magnitude < 1000 then
                                            near = v:FindFirstChild("Totem")
                                        end
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                    table.insert(GetAllPart,v)
                                    if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                        if nearest.Parent.Name:find("Wealthy God") then
                                            local args = {[1] = game.ReplicatedStorage.RelativeTime.Value,[2] = {[1] = workspace:FindFirstChild("Wealthy God").Totem}}
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(unpack(args))
                                        else
                                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                                        end
                                    end
                                end
                            end
                        end
                        if (HRP.Position - nearest.Position).Magnitude < 15 then
                        else
                            game.Players.LocalPlayer.Character.Humanoid.Jump = true
                        end
                        game.Players.LocalPlayer.Character.Humanoid:MoveTo(nearest.Position)
                        wait(0.01)
                    end)
                end
            end)
        end
    end)
    game.Players.LocalPlayer.Character.Humanoid.MaxSlopeAngle = 46
    
    ]]
    getgenv().autoancienttreetpbypass = false    
    mainTp:CreateToggle("Auto Ancient Tree(Patched)", function(bool)
        --[[getgenv().autoancienttreetpbypass = bool   
        if bool then
            TPBypass(true)
        else
            BypassNOFLY()
            local Plrs = game:GetService("Players")
            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
            local CFrameEnd = HRP.CFrame
            local tpspeed = 1000
            local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
            local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
            tween:Play()
            wait(0.05)
            tween:Play()
        end
        if bool then
            spawn(function()
                while autoancienttreetpbypass do wait()
                    pcall(function()    
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = math.huge, nil
                            for i,v in pairs(game.workspace:GetChildren()) do
                                if v.Name:find("Ancient Tree") then
                                    if v:FindFirstChildWhichIsA("BasePart") then
                                        if not v:FindFirstChild("Humanoid") and v:FindFirstChild("Health") then
                                            if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                                near = v:FindFirstChildWhichIsA("BasePart")
                                                nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                            end
                                        end
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                                if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                    if nearest.Parent.Name:find("God") then
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(nearest.Parent.Totem)
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(unpack(args))
                                    else
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                                    end
                                end
                            end
                        end
                        local CFrameEnd = CFrame.new(-561.2482299804688, 312.0548400878906, -1186.3349609375)
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - nearest.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        local NOTIF = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Subordinates.Notifications
                        if NOTIF:FindFirstChildWhichIsA("TextLabel") then
                            --if NOTIF.Text ~= "You leveled up!" then
                                wait(1)
                                tween:Cancel()
                                local Plrs = game:GetService("Players")
                                local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                                local CFrameEnd = HRP.CFrame
                                local tpspeed = 1000
                                local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
                                local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                                tween:Play()
                                wait(5)
                            --[[else
                                wait(1)
                                tween:Play()
                                wait(1)
                            [end
                        else
                            wait(1)
                            tween:Play()
                            wait(1)
                        end
                        wait()
                    end)
                end
            end)
        end]]
    end)
    
    getgenv().autofeatherbypass = false    
    mainTp:CreateToggle("Auto Feather Bush(Patched)", function(bool)
        --[[getgenv().autofeatherbypass = bool
        if bool then
            TPBypass(true)
        else
            BypassNOFLY()
            local Plrs = game:GetService("Players")
            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
            local CFrameEnd = HRP.CFrame
            local tpspeed = 1000
            local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
            local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
            tween:Play()
            wait(0.1)
            tween:Play()
        end
        if bool then
            spawn(function()
                while autofeatherbypass do wait()
                    pcall(function()    
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = math.huge, nil
                            for i,v in pairs(game.workspace:GetChildren()) do
                                if v.Name:find("Feather Bush") then
                                    if v:FindFirstChildWhichIsA("BasePart") then
                                        if not v:FindFirstChild("Humanoid") and v:FindFirstChild("Health") then
                                            if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                                near = v:FindFirstChildWhichIsA("BasePart")
                                                nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                            end
                                        end
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                                if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                    if nearest.Parent.Name:find("God") then
                                        local args = {[1] = game.ReplicatedStorage.RelativeTime.Value,[2] = {[1] = nearest.Parent.Totem}}
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(nearest.Parent.Totem)
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(unpack(args))
                                    else
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                                    end
                                end
                            end
                        end
                        local CFrameEnd = nearest.CFrame * CFrame.new(0,nearest.Size.Y,0)
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - nearest.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        local NOTIF = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Subordinates.Notifications
                        if NOTIF:FindFirstChildWhichIsA("TextLabel") then
                            --if NOTIF.Text ~= "You leveled up!" then
                                wait(1)
                                tween:Cancel()
                                local Plrs = game:GetService("Players")
                                local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                                local CFrameEnd = HRP.CFrame
                                local tpspeed = 1000
                                local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
                                local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                                tween:Play()
                                wait(5)
                            --[[else
                                wait(1)
                                tween:Play()
                                wait(1)
                            end]
                        else
                            wait(1)
                            tween:Play()
                            wait(1)
                        end
                        wait()
                    end)
                end
            end)
        end]]
    end)
    
    getgenv().autofarmtreebush = false    
    mainTp:CreateToggle("Auto Farm Tree/Bush(Patched)", function(bool)
        --[[getgenv().autofarmtreebush = bool
        if bool then
            TPBypass(true)
        else
            BypassNOFLY()
            local Plrs = game:GetService("Players")
            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
            local CFrameEnd = HRP.CFrame
            local tpspeed = 1000
            local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
            local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
            tween:Play()
            wait(0.1)
            tween:Play()
        end
        if bool then
            spawn(function()
                while autofarmtreebush do wait()
                    pcall(function()    
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = math.huge, nil
                            for a,b in pairs(wrkspc:GetChildren()) do
                                for i,v in pairs(b:GetChildren()) do
                                    if v:IsA("BasePart") then
                                        if v.Name:find("Trunk") or v.Name:find("Grass") or v.Name:find("Leaves") or v.Name:find("Bush") then 
                                            if not v.Parent:FindFirstChild("Humanoid") and v.Parent:FindFirstChild("Health") then
                                                if (HRP.Position - v.Position).Magnitude < nearr then
                                                    near = v
                                                    nearr = (HRP.Position - v.Position).Magnitude
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                                if (HRP.Position - nearest.Position).Magnitude <= 20 then
                                    if nearest.Parent.Name:find("God") then
                                        local args = {[1] = game.ReplicatedStorage.RelativeTime.Value,[2] = {[1] = nearest.Parent.Totem}}
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(nearest.Parent.Totem)
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(unpack(args))
                                    else
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                                    end
                                end
                            end
                        end
                        local CFrameEnd = nearest.CFrame * CFrame.new(0,nearest.Size.Y,0)
                        local tpspeed = 10
                        local tweenspeed = math.round(math.abs((HRP.Position - nearest.Position).Magnitude))/tonumber(tpspeed)
                        local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                        local NOTIF = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Subordinates.Notifications
                        if NOTIF:FindFirstChildWhichIsA("TextLabel") then
                            --if NOTIF.Text ~= "You leveled up!" then
                                wait(1)
                                tween:Cancel()
                                local Plrs = game:GetService("Players")
                                local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                                local CFrameEnd = HRP.CFrame
                                local tpspeed = 1000
                                local tweenspeed = math.round(math.abs((HRP.Position - HRP.Position).Magnitude))/tonumber(tpspeed)
                                local tween = game:GetService("TweenService"):Create(HRP, TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear), {CFrame = CFrameEnd})
                                tween:Play()
                                wait(5)
                            --[[else
                                wait(1)
                                tween:Play()
                                wait(1)
                            end]
                        else
                            wait(1)
                            tween:Play()
                            wait(1)
                        end
                        wait()
                    end)
                end
            end)
        end]]
    end)
    
    
    local aura = Window:CreateTab("Main/Aura")
    

    getgenv().autofarmitems1aura = false
    aura:CreateToggle("Auto Farm Items - Aura (Nearest)", function(bool)
    getgenv().autofarmitems1aura = bool
        spawn(function()
            if bool then
                spawn(function()
                    while autofarmitems1aura do wait()
                        SlashAnimation()
                        wait(0.5)
                    end
                end)
                spawn(function()
                    while autofarmitems1aura do wait()
                        pcall(function()
                            local Plrs = game:GetService("Players")
                            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                            local wrkspc = game:GetService("Workspace")
                            local RepS = game:GetService("ReplicatedStorage")
                            function getNear()
                                local near  
                                local nearr = 10, nil
                                for a,b in pairs(wrkspc:GetChildren()) do
                                    for i,v in pairs(b:GetChildren()) do
                                        if v:IsA("BasePart") then
                                            if not v.Parent:FindFirstChild("Humanoid") and v.Parent:FindFirstChild("Health") then
                                                if (HRP.Position - v.Position).Magnitude < nearr then
                                                    near = v
                                                    nearr = (HRP.Position - v.Position).Magnitude
                                                end
                                            end
                                        end
                                    end
                                end
                                return near
                            end
                            local nearest = getNear()
                            local GetAllPart = {}
                            for i,v in pairs(nearest.Parent:GetChildren()) do
                                if v:IsA("BasePart") then
                                    table.insert(GetAllPart,v)
                                end
                            end
                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                            --game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                        end)
                    end
                end)
            end
        end)
    end)

    
    getgenv().autofarmitems1aura2 = false
    aura:CreateToggle("Auto Farm Items - Aura 2 (Nearest)", function(bool)
    getgenv().autofarmitems1aura2 = bool
        spawn(function()
            if bool then
                spawn(function()
                    while autofarmitems1aura2 do wait()
                        SlashAnimation()
                        wait(0.5)
                    end
                end)
                spawn(function()
                    while autofarmitems1aura2 do wait()
                        pcall(function()
                            local Plrs = game:GetService("Players")
                            local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                            local wrkspc = game:GetService("Workspace")
                            local RepS = game:GetService("ReplicatedStorage")
                            function getNear()
                                local near  
                                local nearr = 10, nil
                                for a,b in pairs(wrkspc.Resources:GetChildren()) do
                                    for i,v in pairs(b:GetChildren()) do
                                        if v:IsA("BasePart") then
                                            if not v.Parent:FindFirstChild("Humanoid") and v.Parent:FindFirstChild("Health") then
                                                if (HRP.Position - v.Position).Magnitude < nearr then
                                                    near = v
                                                    nearr = (HRP.Position - v.Position).Magnitude
                                                end
                                            end
                                        end
                                    end
                                end
                                return near
                            end
                            local nearest = getNear()
                            local GetAllPart = {}
                            for i,v in pairs(nearest.Parent:GetChildren()) do
                                if v:IsA("BasePart") then
                                    table.insert(GetAllPart,v)
                                end
                            end
                            game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                            --game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                        end)
                    end
                end)
            end
        end)
    end)
    
    
    getgenv().autokillcrittersaura = false
    aura:CreateToggle("Auto Kill Critters(Mobs) - Aura(Nearest)", function(bool)
    getgenv().autokillcrittersaura = bool
        if bool then
            spawn(function()
                while autokillcrittersaura do wait()
                    SlashAnimation()
                    wait(0.5)
                end
            end)
            spawn(function()
                while autokillcrittersaura do wait()
                    pcall(function()
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = 100, nil
                            local Critters = {}
                            local function add(v)
                                if v:IsA("BasePart") and v.Parent.Name ~= Plrs.LocalPlayer.Name and v.Parent:FindFirstChild("Health") then
                                    table.insert(Critters,v)
                                end
                            end
                            for _,a in pairs(wrkspc.Critters:GetChildren()) do
                                for _,v in pairs(a:GetChildren()) do
                                    add(v)
                                end
                            end
                            for i,v in pairs(Critters) do
                                if (HRP.Position - v.Position).Magnitude < nearr then
                                    near = v
                                    nearr = (HRP.Position - v.Position).Magnitude
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                            end
                        end
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                    end)
                end
            end)
        end
    end)
    
    getgenv().autofeatheraura = false    
    aura:CreateToggle("Auto Feather Bush - Aura(Nearest)", function(bool)
        getgenv().autofeatheraura = bool    
        if bool then
            spawn(function()
                while autofeatheraura do wait()
                    SlashAnimation()
                    wait(0.5)
                end
            end)
            spawn(function()
                while autofeatheraura do wait()
                    pcall(function()    
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = 100, nil
                            for i,v in pairs(game.workspace:GetChildren()) do
                                if v.Name:find("Feather Bush") then
                                    if v:FindFirstChildWhichIsA("BasePart") then
                                        if not v:FindFirstChild("Humanoid") and v:FindFirstChild("Health") then
                                            if (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude < nearr then
                                                near = v:FindFirstChildWhichIsA("BasePart")
                                                nearr = (HRP.Position - v:FindFirstChildWhichIsA("BasePart").Position).Magnitude
                                            end
                                        end
                                    end
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                            end
                        end
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                    end)
                end
            end)
        end
    end)
    
    getgenv().autoswingtoolaura = false
    aura:CreateToggle("Auto Swing Tool - Everything(Nearest), Laggy", function(bool)
    getgenv().autoswingtoolaura = bool
        if bool then
            spawn(function()
                while autoswingtoolaura do wait()
                    SlashAnimation()
                    wait(0.5)
                end
            end)
            spawn(function()
                while autoswingtoolaura do wait()
                    pcall(function()
                        local Plrs = game:GetService("Players")
                        local HRP = Plrs.LocalPlayer.Character.HumanoidRootPart
                        local wrkspc = game:GetService("Workspace")
                        local RepS = game:GetService("ReplicatedStorage")
                        function getNear()
                            local near  
                            local nearr = 100, nil
                            
                            local dick = {}
                            local function add(v)
                                if v:IsA("BasePart") and v.Parent.Name ~= Plrs.LocalPlayer.Name and v.Parent:FindFirstChild("Health") then
                                    table.insert(dick,v)
                                end
                            end
                            for _,v in pairs(workspace:GetDescendants()) do
                                add(v)
                            end
                            for i,v in pairs(dick) do
                                if (HRP.Position - v.Position).Magnitude < nearr then
                                    near = v
                                    nearr = (HRP.Position - v.Position).Magnitude
                                end
                            end
                            return near
                        end
                        local nearest = getNear()
                        local GetAllPart = {}
                        for i,v in pairs(nearest.Parent:GetChildren()) do
                            if v:IsA("BasePart") then
                                table.insert(GetAllPart,v)
                            end
                        end
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(GetAllPart)
                        game:GetService("ReplicatedStorage").Events.SwingTool:FireServer(game.ReplicatedStorage.RelativeTime.Value,GetAllPart)
                    end)
                end
            end)
        end
    end)
    
    
end)




else
    local DEVIL_UI_Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/DEVIL-Script/DEVIL-Ui/main/DEVIL-Ui-Lib", true))()
    
    local Window = DEVIL_UI_Library:CreateWindow("YT - DEVIL Script", game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    

    local credit = Window:CreateTab("Credit/Note")
    

    credit:CreateBlankLabel("To use this script you have to buy this a shirt.")
    credit:CreateButton("Click here to copy the link of the shirt.", function()
        setclipboard("https://www.roblox.com/catalog/7659739953/Skeletion-Hands")
    end)

    credit:CreateButton("Made by, dpsvil", function()
        setclipboard("Made by, dpsvil")
    end)
    
    credit:CreateButton("Discord", function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/myladoisbig/DEVIL-Hub/main/discord-link", true))()
    end)
    
    credit:CreateButton("Destory Ui", function()
        for i,v in pairs(game.CoreGui:GetChildren()) do
            if v.Name == "DEVIL_UI_Lib" then
                v:Remove()
            end
        end
    end)
end
else
print("Error checking ownership.")
end
else
print("LocalPlayer not found.")
end
